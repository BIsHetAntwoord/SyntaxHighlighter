#line 1 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"

#line 3 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

#ifdef yy_create_buffer
#define asm_yy_create_buffer_ALREADY_DEFINED
#else
#define yy_create_buffer asm_yy_create_buffer
#endif

#ifdef yy_delete_buffer
#define asm_yy_delete_buffer_ALREADY_DEFINED
#else
#define yy_delete_buffer asm_yy_delete_buffer
#endif

#ifdef yy_scan_buffer
#define asm_yy_scan_buffer_ALREADY_DEFINED
#else
#define yy_scan_buffer asm_yy_scan_buffer
#endif

#ifdef yy_scan_string
#define asm_yy_scan_string_ALREADY_DEFINED
#else
#define yy_scan_string asm_yy_scan_string
#endif

#ifdef yy_scan_bytes
#define asm_yy_scan_bytes_ALREADY_DEFINED
#else
#define yy_scan_bytes asm_yy_scan_bytes
#endif

#ifdef yy_init_buffer
#define asm_yy_init_buffer_ALREADY_DEFINED
#else
#define yy_init_buffer asm_yy_init_buffer
#endif

#ifdef yy_flush_buffer
#define asm_yy_flush_buffer_ALREADY_DEFINED
#else
#define yy_flush_buffer asm_yy_flush_buffer
#endif

#ifdef yy_load_buffer_state
#define asm_yy_load_buffer_state_ALREADY_DEFINED
#else
#define yy_load_buffer_state asm_yy_load_buffer_state
#endif

#ifdef yy_switch_to_buffer
#define asm_yy_switch_to_buffer_ALREADY_DEFINED
#else
#define yy_switch_to_buffer asm_yy_switch_to_buffer
#endif

#ifdef yypush_buffer_state
#define asm_yypush_buffer_state_ALREADY_DEFINED
#else
#define yypush_buffer_state asm_yypush_buffer_state
#endif

#ifdef yypop_buffer_state
#define asm_yypop_buffer_state_ALREADY_DEFINED
#else
#define yypop_buffer_state asm_yypop_buffer_state
#endif

#ifdef yyensure_buffer_stack
#define asm_yyensure_buffer_stack_ALREADY_DEFINED
#else
#define yyensure_buffer_stack asm_yyensure_buffer_stack
#endif

#ifdef yylex
#define asm_yylex_ALREADY_DEFINED
#else
#define yylex asm_yylex
#endif

#ifdef yyrestart
#define asm_yyrestart_ALREADY_DEFINED
#else
#define yyrestart asm_yyrestart
#endif

#ifdef yylex_init
#define asm_yylex_init_ALREADY_DEFINED
#else
#define yylex_init asm_yylex_init
#endif

#ifdef yylex_init_extra
#define asm_yylex_init_extra_ALREADY_DEFINED
#else
#define yylex_init_extra asm_yylex_init_extra
#endif

#ifdef yylex_destroy
#define asm_yylex_destroy_ALREADY_DEFINED
#else
#define yylex_destroy asm_yylex_destroy
#endif

#ifdef yyget_debug
#define asm_yyget_debug_ALREADY_DEFINED
#else
#define yyget_debug asm_yyget_debug
#endif

#ifdef yyset_debug
#define asm_yyset_debug_ALREADY_DEFINED
#else
#define yyset_debug asm_yyset_debug
#endif

#ifdef yyget_extra
#define asm_yyget_extra_ALREADY_DEFINED
#else
#define yyget_extra asm_yyget_extra
#endif

#ifdef yyset_extra
#define asm_yyset_extra_ALREADY_DEFINED
#else
#define yyset_extra asm_yyset_extra
#endif

#ifdef yyget_in
#define asm_yyget_in_ALREADY_DEFINED
#else
#define yyget_in asm_yyget_in
#endif

#ifdef yyset_in
#define asm_yyset_in_ALREADY_DEFINED
#else
#define yyset_in asm_yyset_in
#endif

#ifdef yyget_out
#define asm_yyget_out_ALREADY_DEFINED
#else
#define yyget_out asm_yyget_out
#endif

#ifdef yyset_out
#define asm_yyset_out_ALREADY_DEFINED
#else
#define yyset_out asm_yyset_out
#endif

#ifdef yyget_leng
#define asm_yyget_leng_ALREADY_DEFINED
#else
#define yyget_leng asm_yyget_leng
#endif

#ifdef yyget_text
#define asm_yyget_text_ALREADY_DEFINED
#else
#define yyget_text asm_yyget_text
#endif

#ifdef yyget_lineno
#define asm_yyget_lineno_ALREADY_DEFINED
#else
#define yyget_lineno asm_yyget_lineno
#endif

#ifdef yyset_lineno
#define asm_yyset_lineno_ALREADY_DEFINED
#else
#define yyset_lineno asm_yyset_lineno
#endif

#ifdef yyget_column
#define asm_yyget_column_ALREADY_DEFINED
#else
#define yyget_column asm_yyget_column
#endif

#ifdef yyset_column
#define asm_yyset_column_ALREADY_DEFINED
#else
#define yyset_column asm_yyset_column
#endif

#ifdef yywrap
#define asm_yywrap_ALREADY_DEFINED
#else
#define yywrap asm_yywrap
#endif

#ifdef yyget_lval
#define asm_yyget_lval_ALREADY_DEFINED
#else
#define yyget_lval asm_yyget_lval
#endif

#ifdef yyset_lval
#define asm_yyset_lval_ALREADY_DEFINED
#else
#define yyset_lval asm_yyset_lval
#endif

#ifdef yyalloc
#define asm_yyalloc_ALREADY_DEFINED
#else
#define yyalloc asm_yyalloc
#endif

#ifdef yyrealloc
#define asm_yyrealloc_ALREADY_DEFINED
#else
#define yyrealloc asm_yyrealloc
#endif

#ifdef yyfree
#define asm_yyfree_ALREADY_DEFINED
#else
#define yyfree asm_yyfree
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin , yyscanner )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

void yyrestart ( FILE *input_file , yyscan_t yyscanner );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size , yyscan_t yyscanner );
void yy_delete_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yy_flush_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
void yypop_buffer_state ( yyscan_t yyscanner );

static void yyensure_buffer_stack ( yyscan_t yyscanner );
static void yy_load_buffer_state ( yyscan_t yyscanner );
static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file , yyscan_t yyscanner );
#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER , yyscanner)

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len , yyscan_t yyscanner );

void *yyalloc ( yy_size_t , yyscan_t yyscanner );
void *yyrealloc ( void *, yy_size_t , yyscan_t yyscanner );
void yyfree ( void * , yyscan_t yyscanner );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
typedef flex_uint8_t YY_CHAR;

typedef int yy_state_type;

#define yytext_ptr yytext_r

static yy_state_type yy_get_previous_state ( yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  , yyscan_t yyscanner);
static int yy_get_next_buffer ( yyscan_t yyscanner );
static void yynoreturn yy_fatal_error ( const char* msg , yyscan_t yyscanner );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yyg->yy_c_buf_p = yy_cp;
#define YY_NUM_RULES 733
#define YY_END_OF_BUFFER 734
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[1544] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      734,  652,  651,  651,  649,  647,  648,  645,  646,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  723,  722,  722,  720,  718,  719,  711,  709,
      713,  710,  712,  715,  715,  706,  714,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  721,  721,  721,
      721,  707,  708,  726,  725,  725,  724,  729,  728,  728,
      727,  732,  731,  731,  730,  651,  650,  650,  650,  650,
      650,  650,  650,  650,  650,   29,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  643,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      241,  650,  275,  258,  260,  291,  279,  265,  650,  650,
      286,  287,  289,  290,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  378,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      612,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  722,  715,    0,  716,    0,  721,
      721,  669,  665,  673,  672,  668,  678,  676,  721,  670,
      666,  653,  674,  671,  681,  667,  654,  721,  675,  721,
      721,  721,  721,  716,  655,  656,  657,  721,  721,  721,
      698,  699,  721,  721,  721,  721,  721,  680,  677,  658,
      721,  721,  725,  728,  731,    1,    2,    3,    4,    5,
        6,   13,   14,   15,  650,  650,  650,   26,   27,  650,
       30,   31,   32,  650,   35,   36,   37,   38,  650,   40,

      650,   42,  650,   73,  650,  650,  650,  650,  109,  111,
      112,  113,  114,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  170,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  203,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  236,  650,  650,
      650,  650,  242,  243,  248,  650,  650,  272,  261,  650,
      650,  277,  267,  269,  262,  271,  273,  285,  268,  276,
      280,  281,  283,  284,  288,  282,  650,  293,  650,  650,

      296,  297,  644,  299,  650,  301,  650,  303,  650,  650,
      650,  650,  650,  650,  317,  318,  319,  650,  650,  650,
      650,  650,  332,  650,  369,  650,  375,  376,  377,  650,
      381,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  462,
      468,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  515,  650,  517,  650,  650,  650,  522,  650,
      529,  530,  650,  535,  650,  650,  539,  543,  544,  650,
      650,  650,  650,  540,  582,  650,  650,  650,  650,  650,
      593,  594,  595,  650,  650,  601,  602,  650,  650,  650,

      613,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  637,  650,  650,  650,
      717,  679,  721,  721,  682,  687,  685,  683,  689,  684,
      688,  686,  664,  721,  700,  701,  702,  703,  704,  705,
      690,  695,  693,  691,  697,  692,  696,  694,  721,  721,
      650,  650,  650,  650,   20,  650,  650,  650,   33,  650,
       41,  650,  650,   76,  650,  650,  650,  650,  650,  650,
      650,  650,  110,  650,  650,  119,  120,  121,  650,  650,
      650,  125,  126,  128,  650,  130,  650,  650,  140,  148,
      650,  150,  650,  650,  650,  650,  161,  650,  650,  650,

      165,  650,  171,  650,  650,  650,  650,  179,  180,  650,
      650,  650,  650,  186,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  200,  650,  650,  650,  206,  650,
      211,  215,  650,  650,  223,  224,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  239,  240,  244,  246,  650,
      245,  249,  251,  252,  650,  650,  650,  256,  263,  650,
      270,  259,  274,  266,  278,  292,  650,  650,  650,  650,
      302,  304,  305,  306,  307,  308,  312,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  336,  650,  650,  650,
      650,  355,  357,  650,  650,  650,  650,  650,  650,  379,

      380,  382,  650,  650,  650,  650,  402,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  463,  650,  466,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  509,  514,  650,  650,  650,  650,
      526,  650,  525,  527,  528,  650,  650,  538,  541,  545,
      562,  549,  551,  578,  566,  554,  650,  573,  574,  576,
      577,  650,  580,  581,  583,  650,  586,  587,  588,  650,
      650,  597,  650,  650,  650,  609,  650,  650,  618,  619,
      650,  650,  650,  650,  650,  650,  650,  222,  650,  650,
      632,  633,  650,  635,  650,  650,  650,  650,  659,  721,

      721,  721,  660,    7,    8,    9,   10,  650,  650,   18,
       19,  650,   25,   28,   34,  650,   56,   43,   45,   72,
       60,   48,  650,   67,   68,   70,   71,   74,   75,   77,
       79,   80,   78,  650,  650,   85,   86,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  115,  116,  117,  118,
      122,  650,  124,  127,  129,  131,  650,  141,  142,  144,
      650,  151,  152,  154,  156,  157,  159,  162,  650,  164,
      166,  650,  168,  172,  650,  650,  650,  650,  178,  181,
      650,  650,  184,  650,  650,  650,  650,  650,  650,  650,
      193,  195,  650,  650,  198,  650,  650,  202,  204,  650,

      207,  208,  209,  210,  212,  213,  216,  221,  225,  226,
      650,  650,  650,  230,  650,  650,  650,  650,  250,  650,
      650,  650,  650,  257,  264,  294,  650,  298,  650,  309,
      311,  310,  316,  650,  315,  650,  322,  323,  324,  325,
      650,  327,  328,  329,  330,  650,  650,  335,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  358,  360,  650,
      650,  363,  359,  364,  650,  367,  650,  370,  371,  372,
      373,  374,  383,  385,  384,  386,  387,  388,  650,  650,
      393,  394,  395,  650,  650,  400,  650,  403,  404,  405,
      406,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  464,  650,  467,  650,  650,  650,  650,  482,  484,
      485,  486,  487,  488,  490,  491,  492,  493,  494,  650,
      650,  499,  500,  650,  510,  512,  516,  518,  519,  520,
      524,  523,  650,  650,  546,  548,  547,  559,  650,  552,
      564,  556,  553,  558,  560,  572,  557,  563,  567,  568,
      570,  571,  575,  569,  650,  650,  650,  650,  650,  598,
      600,  599,  603,  604,  605,  606,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  629,  650,
      631,  650,  636,  638,  639,  650,  641,  650,  661,  662,

      663,  650,   16,   17,  650,  650,  650,   53,   46,   58,
       50,   47,   52,   54,   66,   51,   57,   61,   62,   64,
       65,   69,   63,  650,   83,   84,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  132,  134,
      650,  139,  143,  145,  146,  147,  650,  153,  155,  158,
      160,  650,  167,  169,  173,  174,  175,  176,  177,  182,
      183,  185,  187,  650,  189,  650,  191,  192,  194,  650,
      197,  199,  650,  205,  214,  217,  219,  650,  228,  650,
      650,  232,  233,  234,  650,  237,  238,  650,  253,  254,
      650,  650,  300,  314,  313,  650,  326,  650,  333,  334,

      650,  650,  339,  340,  650,  342,  343,  650,  345,  346,
      650,  650,  351,  650,  354,  650,  650,  650,  365,  366,
      650,  650,  650,  396,  397,  650,  650,  650,  650,  650,
      650,  650,  420,  421,  422,  423,  424,  650,  426,  650,
      428,  650,  430,  431,  432,  433,  650,  650,  436,  437,
      438,  439,  440,  441,  442,  443,  444,  445,  446,  447,
      650,  650,  455,  650,  650,  458,  459,  460,  650,  465,
      650,  474,  475,  650,  650,  478,  479,  480,  481,  483,
      489,  495,  496,  650,  650,  511,  513,  521,  650,  650,
      650,  650,  542,  550,  561,  555,  565,  579,  584,  585,

      589,  590,  591,  592,  650,  650,  650,  650,  650,  650,
      620,  650,  650,  650,  650,  625,  650,  650,  628,  630,
      634,  640,  642,  650,   21,   22,  650,   39,   44,   55,
       49,   59,   81,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  133,  135,  137,
      138,  149,  163,  188,  190,  196,  201,  218,  220,  227,
      229,  231,  650,  650,  255,  295,  650,  331,  337,  338,
      341,  344,  650,  349,  352,  353,  356,  650,  650,  368,
      650,  650,  650,  650,  398,  399,  401,  650,  408,  409,
      410,  411,  650,  414,  415,  416,  417,  650,  425,  650,

      429,  650,  435,  650,  650,  650,  650,  650,  457,  461,
      650,  476,  477,  497,  498,  650,  650,  531,  532,  533,
      534,  536,  537,  596,  650,  608,  610,  611,  650,  650,
      621,  650,  623,  624,  650,  627,   11,   12,   23,   24,
      650,   87,   88,   89,   90,   91,   92,   93,   94,   95,
       96,   97,   98,   99,  100,  101,  102,  650,  650,  650,
      650,  650,  650,  650,  136,  235,  247,  650,  321,  347,
      348,  350,  361,  362,  389,  390,  391,  392,  407,  650,
      650,  650,  650,  448,  449,  450,  451,  452,  453,  454,
      456,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      607,  614,  615,  616,  617,  622,  626,   82,  103,  104,
      105,  106,  107,  108,  123,  650,  412,  413,  418,  419,
      650,  434,  650,  650,  501,  502,  650,  504,  505,  506,
      650,  508,  320,  427,  650,  470,  471,  472,  473,  503,
      507,  469,    0
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
        1,    1,    3,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    4,    1,    5,    1,    1,    1,    1,    6,    1,
        1,    7,    8,    9,   10,    1,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   23,    1,
        1,    1,    1,    1,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
       50,    1,   51,    1,   52,    1,   53,   54,   55,   56,

       57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
       67,   68,   69,   70,   71,   72,   73,   74,   75,   76,
       77,   78,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[79] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    1,    1,    2,    2,    2,    2,    2,    2,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    1,
        1,    3,    2,    2,    2,    2,    2,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3
    } ;

static const flex_int16_t yy_base[1549] =
    {   0,
        0,    0,   78,    0,  155,  158,  161,  165,  169,  171,
      425, 3581, 3581,  422, 3581, 3581, 3581, 3581, 3581,  152,
      143,  199,  159,  192,  263,  137,  201,  316,  363,    0,
      418,  467,  152,  303,  519,  323,  572,  154,  204,  318,
      343,  626, 3581, 3581,  421, 3581, 3581, 3581, 3581, 3581,
     3581, 3581, 3581,  686,  145, 3581, 3581,  751,  404,  402,
      799,  852,  462,  917,  161,  415,  361,  976,  324,  384,
      421, 3581, 3581, 3581, 3581,  419, 3581, 3581, 3581,  417,
     3581, 3581, 3581,  413, 3581, 3581,    0,  512,  476,  195,
      229,  306,  320,  367,  471,  568,  430,  423,  455,  810,

      567,  465,  464,  501,  506,  526,  546,    0,  532,  540,
      572,  577,  575,  576,  577,  630,  616,  685,  631,  602,
     1024,  619,  610, 1070,  684,  623, 1118,  620,  640,  685,
      814,  683,  676,  695,  687,  683,  684,  701,  698,  687,
      846,  704,  745,  804,  786,  809,  816,  823,  813, 1168,
        0,  883,    0,    0,  908,  920,  927,  924,  952,  863,
      866,  853,  978,  919,  855,  911,  869,  861,  918,  915,
      964,  982,  977,  970,  971,  968, 1222,  977,  978,  968,
     1022,  983, 1038,  985,  997, 1273,  999, 1015, 1025, 1065,
     1071, 1077, 1111, 1082, 1093, 1040, 1048, 1031, 1056, 1082,

     1141, 1092, 1103, 1098, 1113, 1321, 1135, 1124, 1126, 1132,
      400, 1133, 1139, 1366, 1154, 1168, 1166, 1177, 1177, 1184,
     1189, 1175, 1182, 1216, 3581, 1179, 1431, 3581,    0, 1223,
     1192, 1201, 1208, 1209, 1210, 1214, 1247, 1219, 1222, 1220,
     1229, 1232, 1240, 1242, 1250, 1256, 1259, 1264, 1265, 1285,
     1319, 1309, 1320, 1267, 1332, 1268, 1270, 1348, 1356, 1441,
     1326, 1328, 1362, 1393, 1418, 1430, 1431, 1360, 1366, 1368,
     1426, 1425, 3581, 3581, 3581,    0,    0,    0,    0,    0,
     1437,    0,    0, 1443, 1424, 1434, 1438,    0,    0, 1457,
        0,    0,    0, 1449,    0,    0,    0,    0, 1450,    0,

     1444,    0, 1442, 1451, 1485, 1486,  395, 1493, 1493,    0,
        0,    0, 1484, 1497, 1483, 1500, 1488, 1494, 1489, 1506,
     1507, 1494, 1496, 1512, 1503, 1506, 1517, 1499, 1517, 1524,
     1518, 1543, 1549, 1534, 1555, 1539, 1580, 1549, 1553, 1557,
     1554, 1555, 1555, 1571, 1553, 1569, 1574, 1574, 1559, 1558,
     1585, 1585, 1592, 1608, 1614, 1597, 1603, 1610, 1609, 1615,
     1607, 1628, 1612,  394, 1612, 1628, 1613,    0, 1632, 1634,
     1615, 1626,    0, 1666, 1654, 1668, 1629,    0,    0, 1624,
     1630,    0,    0, 1651, 1659, 1669,    0,    0, 1670, 1671,
        0,    0,    0,    0,    0,    0, 1671,    0, 1664, 1658,

        0, 1662,    0,    0, 1671,    0, 1667,    0, 1668, 1671,
     1669, 1683, 1676, 1680,    0,    0,    0, 1696, 1696, 1694,
     1710, 1713, 1758, 1726, 1716, 1719,    0,    0,    0, 1730,
     1719, 1720, 1729, 1741, 1738, 1748, 1734, 1747, 1760, 1757,
     1760, 1781, 1777, 1766, 1771, 1788, 1779, 1774, 1785, 1804,
        0, 1792, 1799, 1790, 1810, 1806, 1819, 1821, 1805, 1812,
     1821, 1812,    0, 1817,    0, 1816, 1824, 1819, 1837, 1842,
        0,    0, 1829,    0, 1826, 1839, 1847,    0,    0, 1835,
     1892, 1841, 1841, 1865, 1872, 1875, 1866, 1867, 1865, 1871,
        0,    0,    0, 1872, 1881,    0, 1893, 1896, 1882, 1890,

        0, 1910, 1896, 1933, 1920, 1907, 1934, 1926, 1931, 1929,
     1937, 1933, 1949, 1947, 1935, 1937, 1942, 1939, 1938, 1941,
        0, 1943, 1960, 1948, 1945, 1950, 1951, 1952, 1953, 1957,
     1958, 1966, 1973, 1984, 1978, 1985, 1988, 1990, 1991, 1992,
     1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2024,
     2031, 2049, 2009, 2052,    0, 2025, 2026, 2018, 2031, 2034,
        0, 2100, 2056, 2090, 2058, 2043, 2063,  392, 2052, 2116,
     2118, 2131,    0, 2091, 2142,    0,    0,    0, 2059, 2087,
      391,    0, 2095,    0, 2112,    0, 2105, 2111, 2161,    0,
     2134, 2147, 2154, 2156, 2154, 2146,    0, 2157, 2152, 2152,

     2158, 2171,    0, 2157, 2167, 2204, 2174,    0, 2168, 2180,
     2167, 2178, 2182,    0, 2171, 2184, 2216, 2204, 2195, 2203,
     2214, 2209, 2220, 2214, 2224, 2208, 2206, 2216,  349, 2208,
     2220,    0, 2219, 2219,    0,  180, 2221, 2220, 2242, 2220,
     2240, 2233,  312, 2235, 2246,    0,    0,    0,    0, 2245,
        0,    0,    0,    0, 2250, 2253, 2259, 2272,    0, 2251,
        0,    0,    0,    0,    0,    0, 2258, 2278, 2277, 2280,
        0,    0,    0,    0,    0, 2284, 2288, 2271, 2290, 2297,
     2286, 2315, 2316, 2276, 2281, 2294, 2320, 2317, 2324, 2302,
     2307,  346, 2368, 2323, 2318, 2340, 2348, 2355, 2326,    0,

        0, 2375, 2381, 2336, 2432, 2353, 2351, 2373, 2388, 2379,
     2408, 2377, 2393, 2386, 2400, 2392, 2414, 2404, 2409, 2419,
     2452, 2433, 2427, 2439, 2440, 2446, 2444, 2444, 2458, 2465,
     2482, 2533, 2448, 2468, 2489,    0, 2464, 2474, 2491, 2493,
        0, 2496,    0,    0,    0, 2499, 2487,    0,    0, 2516,
     2504, 2506,    0,    0, 2508, 2509, 2585,    0, 2526,    0,
        0, 2523,    0,    0,    0, 2513,    0,    0,    0, 2546,
     2541, 2544, 2565, 2570, 2581,    0, 2544, 2567,    0,    0,
     2568, 2588, 2578, 2584, 2613, 2597, 2606,    0, 2586, 2592,
        0,    0, 2621, 2623, 2623, 2621, 2633, 2642, 2626, 2643,

     2644, 2641, 2631,    0,    0,    0,    0, 2649, 2649,    0,
        0, 2642,    0,    0,    0, 2636, 2652, 2654,    0,    0,
     2661, 2664, 2698,    0, 2689,    0,    0,    0,    0,    0,
        0,    0,    0, 2670, 2692,    0,    0,  345,  344,  341,
      300,  299,  272,  247, 2702, 2708,    0,    0,    0,    0,
        0, 2687,    0,    0,    0,    0, 2743,    0, 2686, 2728,
     2688,    0, 2693, 2702,    0, 2710, 2718,    0, 2729,    0,
        0, 2735, 2734,    0, 2732, 2755,  237,  236,    0,    0,
     2734, 2750,    0, 2741, 2757, 2747, 2743, 2753, 2745, 2755,
      193,    0, 2756, 2753,    0, 2767, 2761,    0,    0, 2757,

        0,    0,    0,    0,    0, 2766, 2793,    0,    0,    0,
     2769, 2780, 2791, 2787, 2803, 2803, 2796, 2808,    0, 2795,
     2796, 2810, 2809,    0,    0,    0, 2800,    0, 2815,    0,
        0,    0,    0, 2816,    0, 2809,    0,    0,    0,    0,
     2820,    0,    0,    0,    0, 2811, 2824,    0, 2808, 2839,
     2817, 2833, 2818, 2855, 2850, 2861, 2860,    0,    0, 2863,
     2864,    0,    0,    0, 2872,    0, 2871,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 2856, 2860,
        0,    0,    0, 2878, 2863,    0, 2869,    0,    0,    0,
        0, 2880, 2868, 2866, 2873, 2915, 2906, 2879, 2914, 2932,

     2919, 2941, 2947, 2971, 2975, 2879, 2899, 2911, 2964, 2972,
     2927,    0, 2939,    0, 2948, 2958, 2984, 2999, 2966,    0,
        0,    0,    0, 2972,    0,    0,    0,    0,    0, 3011,
     2971,    0,    0, 2980, 2996, 3005,    0,    0,    0, 3001,
        0,    0, 3012, 3021,    0,    0,    0,    0, 3023,    0,
        0,    0, 3028, 3030,    0,    0, 3034, 3036,    0,    0,
        0,    0,    0,    0, 3038, 3040, 3046, 3048, 3026,    0,
        0,    0,    0,    0,    0,    0, 3027, 3039, 3030, 3046,
     3041, 3055, 3047, 3072, 3067, 3054, 3060, 3080,    0, 3085,
        0, 3070,    0,    0,    0, 3075,    0, 3073, 3078, 3079,

     3080, 3085,    0,    0, 3098, 3087, 3097,    0,    0,    0,
        0, 3101, 3102,    0,    0, 3103, 3105,    0,    0,    0,
        0,    0,    0, 3104,    0,    0, 3096, 3129, 3098, 3134,
     3100, 3104, 3106,  190,  188,  187,  186, 3109, 3137,    0,
     3142,    0,    0,    0,    0,    0, 3133,    0,    0,    0,
        0, 3135,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 3140,    0, 3133,    0,    0,    0, 3136,
        0,    0, 3138,    0,    0, 3143, 3144, 3143,    0, 3144,
      184,    0,    0,    0, 3150,    0,    0, 3150,    0,    0,
     3164, 3151,    0,    0,    0, 3148,    0, 3154,    0,    0,

     3159, 3160,    0,    0, 3162,    0,    0, 3164,    0,    0,
     3171, 3174,    0, 3192,    0, 3183, 3181, 3182,    0,    0,
     3182, 3203, 3204,    0,    0, 3207, 3195, 3192, 3231, 3197,
     3243, 3199,    0,    0,    0,    0,    0, 3198,    0, 3207,
        0, 3200,    0,    0,    0,    0, 3222, 3224,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     3228, 3259,    0, 3222, 3226,    0,    0,    0, 3241,    0,
     3262,    0,    0, 3244, 3246,    0,    0,    0,    0,    0,
        0,    0,    0, 3270, 3263,    0,    0,    0, 3269, 3280,
     3258, 3260,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 3262, 3276, 3265, 3293, 3270, 3275,
        0, 3285, 3302, 3303, 3296,    0, 3305, 3314,    0,    0,
        0,    0,    0, 3319,    0,    0, 3320,    0,    0,    0,
        0,    0,  175, 3321, 3304, 3318, 3325, 3313, 3342, 3324,
     3338, 3351, 3345, 3360, 3344, 3346, 3354,    0, 3369,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 3361, 3360,    0,    0, 3378,    0,    0,    0,
        0,    0, 3377, 3382,    0,    0,    0, 3369, 3371,    0,
     3365, 3389, 3374, 3396,    0,    0,    0, 3398,    0,    0,
        0,    0, 3383,    0,    0,    0,    0, 3384,    0, 3385,

        0, 3388,    0, 3407, 3411, 3396, 3415, 3395,    0,    0,
     3413,    0,    0,    0,    0, 3435, 3439,    0,    0,    0,
        0,    0,    0,    0, 3404,    0,    0,    0, 3436, 3441,
        0, 3427,    0,    0, 3441,    0,    0,    0,    0,    0,
     3447,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 3436, 3445, 3442,
     3456, 3458, 3462, 3454,    0,    0,    0, 3459,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 3477,
     3484, 3456, 3456,    0,    0,    0,    0,    0,    0,    0,
        0, 3478, 3457, 3478, 3495, 3497, 3480, 3487, 3503, 3506,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 3490,    0,    0,    0,    0,
     3489,    0, 3493,  234,    0,    0, 3497,    0,    0,    0,
     3499,    0,    0,    0, 3516,    0,    0,    0,    0,    0,
        0,    0, 3581, 3569, 3572, 3575, 3577,  167
    } ;

static const flex_int16_t yy_def[1549] =
    {   0,
     1543,    1, 1543,    3, 1544, 1544, 1545, 1545, 1546, 1546,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1547,
     1547, 1547, 1547, 1547, 1543, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543,   54, 1543, 1543, 1543,   58,   58,
       58,   58,   58,   62,   64,   64,   64,   64,   64,   64,
       64, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1543,   54,   54, 1543, 1548,   58,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   58,
       58,   58,   58,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64, 1543, 1543, 1543, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1548,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,   64,   64,

       64,   64,   64, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,   64,   64,

       64, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547,    0, 1543, 1543, 1543, 1543, 1543
    } ;

static const flex_int16_t yy_nxt[3660] =
    {   0,
       12,   13,   14,   15,   16,   17,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   18,   19,   20,   21,   22,   23,   24,   25,   26,
       27,   28,   29,   30,   31,   32,   33,   34,   35,   30,
       36,   37,   38,   39,   40,   41,   42,   30,   30,   12,
       12,   30,   20,   21,   22,   23,   24,   25,   26,   27,
       28,   29,   30,   31,   32,   33,   34,   35,   30,   36,
       37,   38,   39,   40,   41,   42,   30,   30,   43,   44,
       45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   56,

       57,   58,   59,   60,   61,   62,   63,   64,   65,   65,
       65,   65,   65,   65,   65,   65,   66,   67,   68,   69,
       70,   65,   65,   71,   65,   65,   65,   72,   73,   65,
       58,   59,   60,   61,   62,   63,   64,   65,   65,   65,
       65,   65,   65,   65,   65,   66,   67,   68,   69,   70,
       65,   65,   71,   65,   65,   65,   75,   76,   77,   75,
       76,   77,   79,   80,  133,   81,   79,   80,  521,   81,
       83,   84,   83,   84,   85,   88,   85,   93,   89,  173,
       94,  209,  107,  108,   95,   96,  109,   90,   91,  174,
      110, 1543,   92,  133, 1441,  909, 1362,  111,  910, 1346,

     1345, 1344,  231, 1343,   88, 1169,   93,   89,  173,   94,
      209,  107,  108,   95,   96,  109,   90,   91,  174,  110,
     1543,   92,   97,   98,  134,   99,  111,  112,  113,  210,
      211,  231,  135,  100,  101,  136,  102,  103,  114,  104,
      212,  283,  137,  105,  106, 1536, 1537, 1538, 1539, 1159,
     1158,   97,   98,  134,   99,  284,  112,  113,  210,  211,
     1133,  135,  100,  101,  136,  102,  103,  114,  104,  212,
      283,  137,  105,  106,   87,   87,  115,   87,   87,   87,
       87,   87,   87,   87,  284, 1132,  116,  117,  118,  119,
       87,  120,   87,   87,  121,   87,   87,  122,  123,  124,

       87,  125,   87,  126,  127,  128,  129,   87,  130,  131,
      132,   87, 1131, 1130,   87,  116,  117,  118,  119,   87,
      120,   87,   87,  121,   87,   87,  122,  123,  124,   87,
      125,   87,  126,  127,  128,  129,   87,  130,  131,  132,
       87,  138,  139,  175,  285,  213,  176,  286,  190,  191,
      192,  140,  141,  214, 1129,  268,  142, 1128, 1127,  957,
      193,  901,  269,  917,  194,  270,  215,  216,  902,  903,
      138,  139,  175,  285,  213,  176,  286,  190,  191,  192,
      140,  141,  214,  217,  268,  142,  143,  144,  145,  193,
      146,  269,  147,  194,  270,  215,  216,  148,  149,  150,

      151,  152,  231,  853,  153,  837,  259,  640,  271,  568,
      287,  154,  217,  501,  275,  143,  144,  145,  274,  146,
      273,  147,  225,   86, 1543,  231,  148,  149,  150,  151,
      152,  231,  240,  153,  235,  259,  241,  271,  236,  287,
      154,  155,  237,  242,  156,  157,  158,  159,  243,  160,
      238,  239,  161,  162,  231,  163,  231,  258,  272,  164,
      165,  240,  231,  235,  294,  241, 1543,  236,  295, 1543,
      155,  237,  242,  156,  157,  158,  159,  243,  160,  238,
      239,  161,  162, 1543,  163,  231,  258,  272,  164,  165,
      166,  231,  254,  294,  296,  167,  231,  295,  168,  288,

      305,  280,  281,  256,  169,  170, 1543,  306,  231, 1543,
      171,  289,  172, 1543, 1543, 1543,  290, 1543, 1543,  166,
     1543,  254,  282,  296,  167,  231,  307,  168,  288,  305,
      280,  281,  256,  169,  170,  276,  306,  231,  277,  171,
      289,  172,  177,  178,  179,  290,  180,  278,  308,  181,
      182,  282,  309,  279,  183,  307,  184,  312, 1543,  185,
      186,  187,  188, 1543,  276,  189, 1543,  277, 1543,  310,
     1543,  177,  178,  179, 1543,  180,  278,  308,  181,  182,
     1543,  309,  279,  183,  313,  184,  312,  311,  185,  186,
      187,  188,  302,  291,  189,  195,  196,  197,  310,  198,

      199,  200,  201,  202,  303,  304,  203,  204,  292,  293,
      314,  205,  315,  313,  206,  207,  311,  316,  317,  208,
     1543,  302,  291,  318,  195,  196,  197, 1543,  198,  199,
      200,  201,  202,  303,  304,  203,  204,  292,  293,  314,
      205,  315,  329,  206,  207,  337,  316,  317,  208,  218,
      321,  219,  318,  338,  319,  220,  320,  322,  327,  348,
      221,  356,  328,  222,  349,  357,  223,  224, 1543, 1543,
     1543,  329, 1543, 1543,  337, 1543, 1543, 1543,  218,  321,
      219, 1543,  338,  319,  220,  320,  322,  327,  348,  221,
      356,  328,  222,  349,  357,  223,  224,  226,  226,  226,

      226,  226,  226,  226,  226,  226,  226,  345,  358,  227,
      227,  227,  227,  227,  227,  323,  228,  364,  365,  324,
      325,  366,  326,  367,  346,  368,  347,  369,  370,  371,
      372,  377,  229, 1543, 1543, 1543,  345,  358,  227,  227,
      227,  227,  227,  227,  323,  228,  364,  365,  324,  325,
      366,  326,  367,  346,  368,  347,  369,  370,  371,  372,
      377,  229,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  378, 1543,  230,  230,  230,  230,  230,  230,
      231,  232,  231,  231,  231,  233,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  234,  231,  231,

     1543,  378,  231,  230,  230,  230,  230,  230,  230,  231,
      232,  231,  231,  231,  233,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  234,  231,  231,  244,
      245,  379,  380,  246,  381,  297,  298,  359,  299,  360,
      247,  300, 1543,  382,  248,  249, 1543, 1543, 1543, 1543,
      383,  384,  301, 1543,  361,  362,  363, 1543,  244,  245,
      379,  380,  246,  381,  297,  298,  359,  299,  360,  247,
      300,  373,  382,  248,  249,  250,  251,  252,  253,  383,
      384,  301,  254,  361,  362,  363,  231,  374,  375,  409,
      376, 1543,  410,  255,  411,  417,  420,  421,  231, 1543,

      373, 1543, 1543, 1543,  250,  251,  252,  253, 1543, 1543,
      395,  254, 1543, 1543, 1543,  231,  374,  375,  409,  376,
      396,  410,  255,  411,  417,  420,  421,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  397,  395,
      231,  231,  231,  231,  231,  231,  399,  231,  398,  396,
      402,  405,  418,  415,  422,  400,  424,  419,  257, 1543,
      416,  401,  423,  403, 1543,  406, 1543,  397,  404,  231,
      231,  231,  231,  231,  231,  399,  231,  398,  407,  402,
      405,  418,  415,  422,  400,  424,  419,  257,  260,  416,
      401,  423,  403,  408,  406,  261,  262,  404,  425,  263,

      264,  265,  266,  412,  413,  426,  427,  407,  428,  430,
      431,  439,  429,  440,  441,  414, 1543,  267, 1543,  445,
     1543, 1543,  408,  450,  452,  451,  459,  425,  263,  264,
      265,  266,  412,  413,  426,  427, 1543,  428,  430,  431,
      439,  429,  440,  441,  414,  442,  267,  330,  445,  331,
      332,  460,  450,  452,  451,  459,  461,  443,  333,  334,
      335,  446,  462,  444,  479,  336, 1543, 1543, 1543,  447,
     1543,  480, 1543,  481,  442,  448,  330, 1543,  331,  332,
      460,  449, 1543,  482, 1543,  461,  443,  333,  334,  335,
      446,  462,  444,  479,  336,  339,  340,  341,  447,  463,

      480,  342,  481,  464,  448,  465,  466,  343,  483,  467,
      449,  344,  482,  468, 1543,  469, 1543,  474,  487,  470,
     1543,  475, 1543,  476,  339,  340,  341,  477,  463,  488,
      342, 1543,  464,  478,  465,  466,  343,  483,  467,  489,
      344,  350,  468,  351,  469,  471,  474,  487,  470,  352,
      475,  472,  476,  490,  473, 1543,  477,  353,  488,  497,
      354,  355,  478, 1543, 1543,  498, 1543,  499,  489,  500,
      350,  502,  351, 1543,  471,  484, 1543, 1543,  352,  503,
      472,  485,  490,  473,  486,  510,  353, 1543,  497,  354,
      355,  385,  386,  387,  498,  388,  499,  389,  500,  511,

      502,  512,  390,  513,  484,  391,  392,  514,  503,  393,
      485,  515,  516,  486,  510,  517,  394, 1543, 1543, 1543,
      385,  386,  387,  518,  388, 1543,  389, 1543,  511, 1543,
      512,  390,  513,  231,  391,  392,  514, 1543,  393,  519,
      515,  516,  231,  520,  517,  394,  432,  433,  434,  231,
      231,  231,  518,  254, 1543,  231,  435,  231,  436,  522,
      231,  231,  231,  231,  523,  437,  438, 1543,  519,  231,
      231,  231,  520,  231, 1543,  432,  433,  434,  231,  231,
      231,  231,  254,  231,  231,  435,  231,  436,  231,  231,
      231,  231,  231,  523,  437,  438,  453,  231,  231,  231,

      231,  524,  231,  454,  455,  231,  231,  456,  231,  231,
      231,  231,  231,  457, 1543,  254,  458,  231, 1543,  231,
      231, 1543, 1543, 1543, 1543,  453,  231, 1543, 1543,  231,
      524,  525,  454,  455,  231,  231,  456,  231,  231,  254,
      231, 1543,  457,  231,  254,  458,  491,  492,  231,  254,
      254,  529,  493,  231,  231,  528,  494,  526,  495, 1543,
      525,  496, 1543,  531, 1543,  527,  530,  231,  254,  231,
      532, 1543,  231,  231, 1543,  491,  492, 1543,  254,  254,
      529,  493,  231,  231,  528,  494,  526,  495,  533,  231,
      496,  504,  531,  534,  527,  530,  231,  231,  231,  532,

      505,  231,  231,  231,  506, 1543,  507,  231,  541,  231,
     1543,  508,  509, 1543, 1543, 1543, 1543,  533,  231, 1543,
      504, 1543,  534, 1543, 1543, 1543,  231, 1543, 1543,  505,
      231,  542,  231,  506,  231,  507,  231,  541,  231,  543,
      508,  509,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  535,  536,  537,  538,  539,  540,  555,  231,
      542,  545,  547,  231,  544,  550,  231,  231,  543,  548,
      556,  231,  231,  549,  557,  551,  546, 1543,  552,  553,
      558,  554,  231,  559,  560,  561,  562,  555,  231,  563,
      545,  547,  564,  544,  550,  231,  231,  565,  548,  556,

      231,  231,  549,  557,  551,  546, 1543,  552,  553,  558,
      554,  231,  559,  560,  561,  562,  566,  567,  563,  569,
      573,  564,  574,  576,  578,  575,  565,  579,  580,  581,
      582,  570,  583,  584,  571,  572,  585,  586,  577,  587,
      588,  589,  591,  592,  593,  566,  567,  590,  569,  573,
      594,  574,  576,  578,  575,  595,  579,  580,  581,  582,
      570,  583,  584,  571,  572,  585,  586,  577,  587,  588,
      589,  591,  592,  593,  596,  597,  590,  598, 1543,  594,
      599,  601,  602,  609,  595, 1543,  600,  610,  611, 1543,
      612,  613,  603,  614,  615,  618,  619,  620,  616, 1543,

      621,  622,  623,  596,  597,  604,  598,  605,  624,  599,
      601,  602,  609,  617,  606,  600,  610,  611,  607,  612,
      613,  625,  614,  615,  618,  619,  620,  616,  608,  621,
      622,  623,  626,  627,  604,  628,  605,  624,  631,  632,
      633,  634,  617,  606,  635,  636,  629,  607,  637,  630,
      625,  638,  639,  641,  642,  643,  644,  608,  645,  646,
      647,  626,  627, 1543,  628, 1543,  652,  631,  632,  633,
      634,  658,  659,  635,  636,  629,  660,  637,  630,  661,
      638,  639,  641,  642,  643,  644,  662,  645,  646,  647,
      648,  653,  649,  650,  654,  655,  663,  664,  665,  666,

      658,  659,  656,  667,  668,  660,  669,  670,  661,  671,
      672,  651,  657,  673,  674,  662,  675,  676,  677,  648,
      653,  649,  650,  654,  655,  663,  664,  665,  666,  678,
      681,  656,  667,  668,  679,  669,  670,  680,  671,  672,
      651,  657,  673,  674,  684,  675,  676,  677,  682,  696,
      699,  683, 1543, 1543,  697, 1543,  700,  698,  678,  681,
      702,  703,  704,  679, 1543, 1543,  680,  705, 1543,  706,
     1543,  701, 1543,  684,  707,  708,  709,  682,  696,  699,
      683,  685,  686,  697,  687,  700,  698,  710,  688,  702,
      703,  704,  689,  690,  691,  711,  705,  692,  706,  693,

      701,  694,  712,  707,  708,  709,  695,  713,  714,  715,
      685,  686,  716,  687,  717,  719,  710,  688,  720,  721,
      725,  689,  690,  691,  711,  726,  692,  722,  693,  723,
      694,  712,  724,  727,  718,  695,  713,  714,  715,  728,
      729,  716,  730,  717,  719,  732,  733,  720,  721,  725,
      734,  735,  736,  731,  726,  737,  722,  738,  723,  739,
      740,  724,  727,  718,  741,  746,  747,  748,  728,  729,
      744,  730,  749,  742,  732,  733,  750,  762,  745,  734,
      735,  736,  731,  763,  737,  743,  738, 1543,  739,  740,
     1543,  764, 1543,  741,  746,  747,  748, 1543,  765,  744,

     1543,  749,  742,  766, 1543,  750,  762,  745,  767,  768,
      769, 1543,  763,  770,  743,  751,  752,  753,  771,  754,
      764,  755,  772,  775,  776,  777,  756,  765,  757,  758,
      759,  773,  766,  760,  774,  778,  779,  767,  768,  769,
      761,  780,  770,  783,  751,  752,  753,  771,  754,  784,
      755,  772,  775,  776,  777,  756,  781,  757,  758,  759,
      773,  785,  760,  774,  778,  779,  786,  782,  787,  761,
      780,  788,  783,  789,  790,  791,  792,  793,  784,  794,
      795,  796,  797,  798,  231,  781,  231,  799,  800,  231,
      785,  231,  231,  231,  231,  786,  782,  787,  231,  231,

      788,  231,  789,  790,  791,  792,  793,  231,  794,  795,
      796,  797,  798,  231,  231,  231,  799,  800,  231,  231,
      231,  231,  231,  231,  801,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  802, 1543,  809,  231, 1543,
      803,  812,  813,  801,  231,  231,  814,  804,  231,  815,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  805,  231,  802,  806,  809,  816,  810,  803,
      812,  813,  828,  834,  835,  814,  804, 1543,  815,  836,
      807,  838,  808,  811,  231, 1543, 1543,  829, 1543,  851,

     1543,  805, 1543, 1543,  806, 1543,  816,  810, 1543, 1543,
      852,  828,  834,  835,  830, 1543,  831,  847,  836,  807,
      838,  808,  811,  817,  818,  819,  829,  820,  851,  821,
     1543,  832,  848,  854,  822,  833,  823,  824,  825,  852,
     1543,  826,  839,  830,  842,  831,  847,  840,  827,  843,
      855,  856,  817,  818,  819,  857,  820,  841,  821,  844,
      832,  848,  854,  822,  833,  823,  824,  825,  849,  845,
      826,  839,  846,  842,  858,  861,  840,  827,  843,  855,
      856,  864,  865,  850,  857,  862,  841,  863,  844,  866,
      867,  868,  859,  869,  870,  873,  871,  849,  845,  860,

      872,  846,  874,  875,  861,  879,  880,  881,  882,  883,
      864,  865,  850,  884,  862,  885,  863,  876,  866,  867,
      868,  859,  869,  870,  873,  871,  886,  890,  860,  872,
      891,  874,  875,  877,  879,  880,  881,  882,  883,  892,
      878,  887,  884,  888,  885,  893,  894,  895,  896,  897,
      898,  899,  900,  904,  907,  886,  890,  889,  905,  891,
      906,  908,  877,  911,  912,  913,  914,  915,  892,  878,
      887,  916,  888,  918,  893,  894,  895,  896,  897,  898,
      899,  900,  904,  907,  919,  920,  889,  905,  921,  906,
      908,  922,  911,  912,  913,  914,  915,  923,  924,  925,

      916,  926,  918,  927,  928,  929,  936, 1543,  930, 1543,
      931,  941, 1543,  919,  920,  933,  937,  921,  946,  947,
      922,  948, 1543,  939,  934, 1543,  923,  924,  925,  932,
      926,  938,  927,  928,  929,  936,  935,  930,  940,  931,
      941,  942,  944,  955,  933,  937,  949,  946,  947,  956,
      948,  951,  939,  934,  953,  952,  943,  945,  932,  950,
      938,  965,  954, 1543,  966,  935,  967,  940,  972, 1543,
      942,  944,  955, 1543,  968,  949, 1543,  979,  956,  980,
      951,  970,  987,  953,  952,  943,  945,  988,  950,  969,
      965,  954,  958,  966,  959,  967,  971,  972,  960,  973,

      989,  974,  961,  968, 1543,  976,  979,  977,  980,  962,
      970,  987,  990,  963,  964,  992,  988,  996,  969,  997,
      975,  958,  998,  959,  999,  971,  978,  960,  973,  989,
      974,  961, 1000,  991,  976,  993,  977,  994,  962,  995,
     1001,  990,  963,  964,  992, 1002,  996, 1003,  997,  975,
     1004,  998, 1005,  999, 1006,  978,  981, 1543,  982, 1012,
     1007, 1000,  991, 1013,  993, 1014,  994, 1015,  995, 1001,
     1016,  983, 1017,  984, 1002,  985, 1003,  986, 1008, 1004,
     1018, 1005, 1009, 1006, 1019,  981, 1010,  982, 1012, 1007,
     1033, 1022, 1013, 1034, 1014, 1011, 1015, 1020, 1543, 1016,

      983, 1017,  984, 1021,  985, 1037,  986, 1008, 1024, 1018,
     1023, 1009, 1035, 1019, 1038, 1010, 1039, 1036, 1040, 1033,
     1022, 1025, 1034, 1041, 1011, 1043, 1020, 1026, 1543, 1044,
     1543, 1048, 1021, 1050, 1037, 1051, 1052, 1024, 1049, 1023,
     1045, 1035, 1046, 1038, 1042, 1039, 1036, 1040, 1065, 1543,
     1025, 1066, 1041, 1063, 1043, 1543, 1026, 1027, 1044, 1028,
     1048, 1047, 1050, 1064, 1051, 1052, 1069, 1049, 1070, 1045,
     1071, 1046, 1029, 1042, 1030, 1079, 1031, 1065, 1032, 1543,
     1066, 1543, 1063, 1543, 1067, 1543, 1027, 1068, 1028, 1072,
     1047, 1073, 1064, 1543, 1543, 1069, 1075, 1070, 1543, 1071,

     1080, 1029, 1081, 1030, 1079, 1031, 1074, 1032, 1053, 1054,
     1055, 1076, 1056, 1067, 1057, 1082, 1068, 1077, 1072, 1058,
     1073, 1083, 1059, 1060, 1084, 1075, 1061, 1078, 1087, 1080,
     1090, 1081, 1091, 1062, 1088, 1074, 1085, 1053, 1054, 1055,
     1076, 1056, 1089, 1057, 1082, 1092, 1077, 1093, 1058, 1094,
     1083, 1059, 1060, 1084, 1086, 1061, 1078, 1087, 1096, 1090,
     1097, 1091, 1062, 1088, 1095, 1085, 1098,  231, 1101, 1099,
     1100, 1089,  231, 1102, 1092, 1103, 1093, 1107, 1094, 1108,
     1105, 1109,  231, 1086,  231,  231, 1106, 1096, 1110, 1097,
     1104, 1111, 1543, 1095, 1543, 1098,  231, 1101, 1099, 1100,

     1124,  231, 1102, 1543, 1103, 1543, 1107, 1543, 1108, 1105,
     1109,  231, 1138,  231,  231, 1106, 1122, 1110, 1125, 1104,
     1111, 1112, 1113, 1114, 1143, 1115, 1123, 1116, 1134, 1124,
     1147, 1148, 1117, 1126, 1136, 1118, 1119, 1543, 1543, 1120,
     1149, 1138, 1144, 1135, 1145, 1122, 1121, 1125, 1150, 1137,
     1112, 1113, 1114, 1143, 1115, 1123, 1116, 1134, 1151, 1147,
     1148, 1117, 1126, 1136, 1118, 1119, 1146, 1139, 1120, 1149,
     1140, 1152, 1135, 1153, 1154, 1121, 1155, 1150, 1137, 1141,
     1160, 1161, 1156, 1162, 1163, 1164, 1142, 1151, 1165, 1166,
     1167, 1168, 1170, 1171, 1172, 1146, 1139, 1157, 1173, 1140,

     1152, 1174, 1153, 1154, 1175, 1155, 1178, 1179, 1141, 1160,
     1161, 1156, 1162, 1163, 1164, 1142, 1180, 1165, 1166, 1167,
     1168, 1170, 1171, 1172, 1176, 1181, 1157, 1173, 1182, 1183,
     1174, 1177, 1185, 1175, 1186, 1178, 1179, 1188, 1189, 1190,
     1191, 1192, 1193, 1194, 1184, 1180, 1196, 1197, 1198, 1187,
     1199, 1201, 1202, 1176, 1181, 1205, 1208, 1182, 1183, 1206,
     1177, 1185, 1203, 1186, 1195, 1200, 1188, 1189, 1190, 1191,
     1192, 1193, 1194, 1184, 1207, 1196, 1197, 1198, 1187, 1199,
     1201, 1209, 1204, 1211, 1205, 1208, 1216, 1212, 1206, 1217,
     1218, 1203, 1213, 1195, 1200, 1221, 1210, 1222, 1219, 1214,

     1215, 1223, 1224, 1207, 1226, 1227, 1228, 1229, 1231, 1230,
     1209, 1204, 1211, 1220, 1232, 1216, 1212, 1240, 1217, 1218,
     1261, 1213, 1543, 1225, 1221, 1210, 1222, 1219, 1214, 1215,
     1223, 1224, 1237, 1226, 1227, 1228, 1229, 1231, 1230, 1233,
     1241, 1234, 1220, 1232, 1543, 1262, 1240, 1238, 1543, 1261,
     1263, 1239, 1225, 1269, 1235, 1242, 1244, 1543, 1245, 1243,
     1236, 1237, 1247, 1543, 1248, 1249, 1543, 1250, 1233, 1241,
     1234, 1252, 1543, 1253, 1262, 1543, 1238, 1246, 1543, 1263,
     1239, 1270, 1269, 1235, 1242, 1244, 1251, 1245, 1243, 1236,
     1271, 1247, 1254, 1248, 1249, 1255, 1250, 1256, 1267, 1258,

     1252, 1259, 1253, 1272, 1264, 1280, 1246, 1265, 1273, 1266,
     1270, 1281, 1284, 1285, 1274, 1251, 1257, 1268, 1275, 1271,
     1260, 1254, 1286, 1277, 1255, 1278, 1256, 1267, 1258, 1276,
     1259, 1287, 1272, 1264, 1280, 1282, 1265, 1273, 1266, 1288,
     1281, 1284, 1285, 1274, 1279, 1257, 1268, 1275, 1293, 1260,
     1289, 1286, 1277, 1290, 1278, 1294, 1283, 1295, 1276, 1291,
     1287, 1296, 1292, 1297, 1282, 1298, 1299, 1305, 1288, 1306,
     1307, 1308, 1301, 1279, 1303, 1311, 1309, 1293, 1312, 1289,
     1310, 1300, 1290, 1313, 1294, 1283, 1295, 1302, 1291, 1304,
     1296, 1292, 1297, 1316, 1298, 1299, 1305, 1317, 1306, 1307,

     1308, 1301, 1318, 1303, 1311, 1309, 1314, 1312, 1319, 1310,
     1300, 1320, 1313, 1315, 1321, 1322, 1302, 1323, 1304,  231,
      231,  231, 1316, 1324, 1325, 1327, 1317, 1328, 1329, 1330,
     1331, 1318, 1332, 1333, 1334, 1314, 1337, 1319, 1543, 1326,
     1320, 1340, 1315, 1321, 1322, 1341, 1323, 1342,  231,  231,
      231, 1347, 1324, 1325, 1327, 1335, 1328, 1329, 1330, 1331,
     1338, 1332, 1333, 1334, 1348, 1337, 1349, 1336, 1326, 1350,
     1340, 1352, 1339, 1353, 1341, 1354, 1342, 1355, 1356, 1357,
     1347, 1358, 1359, 1360, 1335, 1351, 1361, 1363, 1364, 1338,
     1365, 1366, 1367, 1348, 1368, 1349, 1336, 1369, 1350, 1370,

     1352, 1339, 1353, 1371, 1354, 1372, 1355, 1356, 1357, 1373,
     1358, 1359, 1360, 1374, 1351, 1361, 1363, 1364, 1375, 1365,
     1366, 1367, 1377, 1368, 1378, 1379, 1369, 1380, 1370, 1381,
     1383, 1385, 1371, 1376, 1372, 1387, 1388, 1389, 1373, 1393,
     1543, 1398, 1374, 1399, 1400, 1401, 1402, 1375, 1382, 1384,
     1403, 1377, 1386, 1378, 1379, 1390, 1380, 1391, 1381, 1383,
     1385, 1404, 1376, 1408, 1387, 1388, 1389, 1394, 1393, 1395,
     1398, 1409, 1399, 1400, 1401, 1402, 1392, 1382, 1384, 1403,
     1410, 1386, 1396, 1405, 1390, 1406, 1391, 1411, 1397, 1412,
     1404, 1413, 1408, 1416, 1414, 1418, 1394, 1417, 1395, 1422,

     1409, 1423, 1424, 1425, 1407, 1392, 1420, 1426, 1429, 1410,
     1419, 1396, 1405, 1430, 1406, 1415, 1411, 1397, 1412, 1427,
     1413, 1421, 1416, 1414, 1418, 1431, 1417, 1432, 1422, 1433,
     1423, 1424, 1425, 1407, 1428, 1420, 1426, 1429, 1434, 1419,
     1435, 1436, 1430, 1444, 1415, 1437, 1439, 1442, 1427, 1445,
     1421, 1447, 1449, 1543, 1431, 1452, 1432, 1543, 1433, 1446,
     1438, 1440, 1443, 1428, 1454, 1453, 1448, 1434, 1450, 1435,
     1436, 1458, 1444, 1451, 1437, 1439, 1442, 1456, 1445, 1455,
     1447, 1449, 1457, 1459, 1452, 1462, 1460, 1463, 1446, 1438,
     1440, 1443, 1464, 1454, 1453, 1448, 1465, 1450, 1461, 1466,

     1458, 1467, 1451, 1470, 1468, 1472, 1456, 1473, 1455, 1474,
     1475, 1457, 1459, 1476, 1462, 1460, 1463, 1469, 1471, 1477,
     1478, 1464, 1479, 1480, 1481, 1465, 1482, 1461, 1466, 1483,
     1467, 1484, 1470, 1468, 1472, 1488, 1473, 1485, 1474, 1475,
     1491, 1489, 1476, 1492, 1501, 1543, 1469, 1471, 1477, 1478,
     1486, 1479, 1480, 1481, 1490, 1482, 1487, 1506, 1483, 1493,
     1484, 1494, 1502, 1497, 1488, 1498, 1485, 1504, 1507, 1491,
     1489, 1508, 1492, 1501, 1495, 1509, 1510, 1503, 1499, 1486,
     1496, 1511, 1505, 1490, 1500, 1487, 1506, 1512, 1493, 1513,
     1494, 1502, 1497, 1514, 1498, 1515, 1504, 1507, 1516, 1521,

     1508, 1522, 1525, 1495, 1509, 1510, 1503, 1499, 1517, 1496,
     1511, 1505, 1518, 1500, 1523, 1519, 1512, 1526, 1513, 1520,
     1524, 1527, 1514, 1528, 1515, 1529, 1530, 1516, 1521, 1531,
     1522, 1525, 1532, 1533, 1534, 1535, 1540, 1517, 1541, 1542,
     1543, 1518, 1543, 1523, 1519, 1543, 1526, 1543, 1520, 1524,
     1527, 1543, 1528, 1543, 1529, 1530, 1543, 1543, 1531, 1543,
     1543, 1532, 1533, 1534, 1535, 1540, 1543, 1541, 1542,   74,
       74,   74,   78,   78,   78,   82,   82,   82,   87,   87,
       11, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,

     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543
    } ;

static const flex_int16_t yy_chk[3660] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    5,    5,    5,    6,
        6,    6,    7,    7,   26,    7,    8,    8, 1548,    8,
        9,    9,   10,   10,    9,   20,   10,   21,   20,   33,
       21,   38,   23,   23,   21,   21,   23,   20,   20,   33,
       23,   55,   20,   26, 1333,  636, 1181,   23,  636, 1137,

     1136, 1135,   65, 1134,   20,  891,   21,   20,   33,   21,
       38,   23,   23,   21,   21,   23,   20,   20,   33,   23,
       55,   20,   22,   22,   27,   22,   23,   24,   24,   39,
       39,   65,   27,   22,   22,   27,   22,   22,   24,   22,
       39,   90,   27,   22,   22, 1524, 1524, 1524, 1524,  878,
      877,   22,   22,   27,   22,   91,   24,   24,   39,   39,
      844,   27,   22,   22,   27,   22,   22,   24,   22,   39,
       90,   27,   22,   22,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   91,  843,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,

       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,  842,  841,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   28,   28,   34,   92,   40,   34,   93,   36,   36,
       36,   28,   28,   40,  840,   69,   28,  839,  838,  692,
       36,  629,   69,  643,   36,   69,   41,   41,  629,  629,
       28,   28,   34,   92,   40,   34,   93,   36,   36,   36,
       28,   28,   40,   41,   69,   28,   29,   29,   29,   36,
       29,   69,   29,   36,   69,   41,   41,   29,   29,   29,

       29,   29,   67,  581,   29,  568,   67,  364,   70,  307,
       94,   29,   41,  211,   84,   29,   29,   29,   80,   29,
       76,   29,   45,   14,   11,   70,   29,   29,   29,   29,
       29,   67,   60,   29,   59,   67,   60,   70,   59,   94,
       29,   31,   59,   60,   31,   31,   31,   31,   60,   31,
       59,   59,   31,   31,   70,   31,   66,   66,   71,   31,
       31,   60,   71,   59,   97,   60,    0,   59,   98,    0,
       31,   59,   60,   31,   31,   31,   31,   60,   31,   59,
       59,   31,   31,    0,   31,   66,   66,   71,   31,   31,
       32,   71,   63,   97,   99,   32,   63,   98,   32,   95,

      102,   89,   89,   63,   32,   32,    0,  103,   63,    0,
       32,   95,   32,    0,    0,    0,   95,    0,    0,   32,
        0,   63,   89,   99,   32,   63,  104,   32,   95,  102,
       89,   89,   63,   32,   32,   88,  103,   63,   88,   32,
       95,   32,   35,   35,   35,   95,   35,   88,  105,   35,
       35,   89,  106,   88,   35,  104,   35,  109,    0,   35,
       35,   35,   35,    0,   88,   35,    0,   88,    0,  107,
        0,   35,   35,   35,    0,   35,   88,  105,   35,   35,
        0,  106,   88,   35,  110,   35,  109,  107,   35,   35,
       35,   35,  101,   96,   35,   37,   37,   37,  107,   37,

       37,   37,   37,   37,  101,  101,   37,   37,   96,   96,
      111,   37,  112,  110,   37,   37,  107,  113,  114,   37,
        0,  101,   96,  115,   37,   37,   37,    0,   37,   37,
       37,   37,   37,  101,  101,   37,   37,   96,   96,  111,
       37,  112,  120,   37,   37,  122,  113,  114,   37,   42,
      117,   42,  115,  123,  116,   42,  116,  117,  119,  126,
       42,  128,  119,   42,  126,  129,   42,   42,    0,    0,
        0,  120,    0,    0,  122,    0,    0,    0,   42,  117,
       42,    0,  123,  116,   42,  116,  117,  119,  126,   42,
      128,  119,   42,  126,  129,   42,   42,   54,   54,   54,

       54,   54,   54,   54,   54,   54,   54,  125,  130,   54,
       54,   54,   54,   54,   54,  118,   54,  132,  133,  118,
      118,  134,  118,  135,  125,  136,  125,  137,  138,  139,
      140,  142,   54,    0,    0,    0,  125,  130,   54,   54,
       54,   54,   54,   54,  118,   54,  132,  133,  118,  118,
      134,  118,  135,  125,  136,  125,  137,  138,  139,  140,
      142,   54,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,  143,    0,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,

        0,  143,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   61,
       61,  144,  145,   61,  146,  100,  100,  131,  100,  131,
       61,  100,    0,  147,   61,   61,    0,    0,    0,    0,
      148,  149,  100,    0,  131,  131,  131,    0,   61,   61,
      144,  145,   61,  146,  100,  100,  131,  100,  131,   61,
      100,  141,  147,   61,   61,   62,   62,   62,   62,  148,
      149,  100,   62,  131,  131,  131,   62,  141,  141,  160,
      141,    0,  161,   62,  162,  165,  167,  168,   62,    0,

      141,    0,    0,    0,   62,   62,   62,   62,    0,    0,
      152,   62,    0,    0,    0,   62,  141,  141,  160,  141,
      152,  161,   62,  162,  165,  167,  168,   62,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,  155,  152,
       64,   64,   64,   64,   64,   64,  156,   64,  155,  152,
      157,  158,  166,  164,  169,  156,  170,  166,   64,    0,
      164,  156,  169,  157,    0,  158,    0,  155,  157,   64,
       64,   64,   64,   64,   64,  156,   64,  155,  159,  157,
      158,  166,  164,  169,  156,  170,  166,   64,   68,  164,
      156,  169,  157,  159,  158,   68,   68,  157,  171,   68,

       68,   68,   68,  163,  163,  172,  173,  159,  174,  175,
      176,  178,  174,  179,  180,  163,    0,   68,    0,  182,
        0,    0,  159,  184,  185,  184,  187,  171,   68,   68,
       68,   68,  163,  163,  172,  173,    0,  174,  175,  176,
      178,  174,  179,  180,  163,  181,   68,  121,  182,  121,
      121,  188,  184,  185,  184,  187,  188,  181,  121,  121,
      121,  183,  189,  181,  196,  121,    0,    0,    0,  183,
        0,  197,    0,  198,  181,  183,  121,    0,  121,  121,
      188,  183,    0,  199,    0,  188,  181,  121,  121,  121,
      183,  189,  181,  196,  121,  124,  124,  124,  183,  190,

      197,  124,  198,  190,  183,  190,  191,  124,  200,  191,
      183,  124,  199,  191,    0,  192,    0,  194,  202,  192,
        0,  194,    0,  195,  124,  124,  124,  195,  190,  203,
      124,    0,  190,  195,  190,  191,  124,  200,  191,  204,
      124,  127,  191,  127,  192,  193,  194,  202,  192,  127,
      194,  193,  195,  205,  193,    0,  195,  127,  203,  207,
      127,  127,  195,    0,    0,  208,    0,  209,  204,  210,
      127,  212,  127,    0,  193,  201,    0,    0,  127,  213,
      193,  201,  205,  193,  201,  215,  127,    0,  207,  127,
      127,  150,  150,  150,  208,  150,  209,  150,  210,  216,

      212,  217,  150,  218,  201,  150,  150,  219,  213,  150,
      201,  220,  221,  201,  215,  222,  150,    0,    0,    0,
      150,  150,  150,  223,  150,  226,  150,    0,  216,    0,
      217,  150,  218,  231,  150,  150,  219,    0,  150,  224,
      220,  221,  232,  224,  222,  150,  177,  177,  177,  233,
      234,  235,  223,  230,  226,  236,  177,  230,  177,  237,
      238,  240,  231,  239,  239,  177,  177,    0,  224,  230,
      241,  232,  224,  242,    0,  177,  177,  177,  233,  234,
      235,  243,  230,  244,  236,  177,  230,  177,  237,  238,
      240,  245,  239,  239,  177,  177,  186,  246,  230,  241,

      247,  248,  242,  186,  186,  248,  249,  186,  254,  256,
      243,  257,  244,  186,    0,  250,  186,  237,    0,  250,
      245,    0,    0,    0,    0,  186,  246,    0,    0,  247,
      248,  250,  186,  186,  248,  249,  186,  254,  256,  252,
      257,    0,  186,  252,  250,  186,  206,  206,  250,  251,
      253,  253,  206,  251,  253,  252,  206,  251,  206,    0,
      250,  206,    0,  255,    0,  251,  253,  261,  252,  262,
      255,    0,  252,  255,    0,  206,  206,    0,  251,  253,
      253,  206,  251,  253,  252,  206,  251,  206,  258,  258,
      206,  214,  255,  259,  251,  253,  261,  259,  262,  255,

      214,  268,  255,  263,  214,    0,  214,  269,  263,  270,
        0,  214,  214,    0,    0,    0,    0,  258,  258,    0,
      214,    0,  259,    0,    0,    0,  259,    0,    0,  214,
      268,  264,  263,  214,  264,  214,  269,  263,  270,  264,
      214,  214,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  260,  260,  260,  260,  260,  260,  285,  265,
      264,  266,  267,  264,  265,  272,  272,  271,  264,  267,
      286,  266,  267,  271,  287,  281,  266,  227,  281,  284,
      290,  284,  260,  294,  299,  301,  303,  285,  265,  304,
      266,  267,  304,  265,  272,  272,  271,  304,  267,  286,

      266,  267,  271,  287,  281,  266,  227,  281,  284,  290,
      284,  260,  294,  299,  301,  303,  305,  306,  304,  308,
      309,  304,  313,  314,  315,  313,  304,  316,  317,  318,
      319,  308,  320,  321,  308,  308,  322,  323,  314,  324,
      325,  326,  327,  328,  329,  305,  306,  326,  308,  309,
      330,  313,  314,  315,  313,  331,  316,  317,  318,  319,
      308,  320,  321,  308,  308,  322,  323,  314,  324,  325,
      326,  327,  328,  329,  332,  333,  326,  334,    0,  330,
      335,  336,  336,  338,  331,    0,  335,  339,  340,    0,
      341,  342,  337,  343,  344,  345,  346,  347,  344,    0,

      348,  349,  350,  332,  333,  337,  334,  337,  351,  335,
      336,  336,  338,  344,  337,  335,  339,  340,  337,  341,
      342,  352,  343,  344,  345,  346,  347,  344,  337,  348,
      349,  350,  353,  354,  337,  354,  337,  351,  355,  356,
      357,  358,  344,  337,  359,  360,  354,  337,  361,  354,
      352,  362,  363,  365,  366,  367,  369,  337,  370,  371,
      372,  353,  354,    0,  354,    0,  375,  355,  356,  357,
      358,  377,  380,  359,  360,  354,  381,  361,  354,  384,
      362,  363,  365,  366,  367,  369,  385,  370,  371,  372,
      374,  375,  374,  374,  376,  376,  386,  389,  390,  397,

      377,  380,  376,  399,  400,  381,  402,  405,  384,  407,
      409,  374,  376,  410,  411,  385,  412,  413,  414,  374,
      375,  374,  374,  376,  376,  386,  389,  390,  397,  418,
      420,  376,  399,  400,  419,  402,  405,  419,  407,  409,
      374,  376,  410,  411,  422,  412,  413,  414,  421,  424,
      426,  421,    0,    0,  425,    0,  430,  425,  418,  420,
      431,  432,  433,  419,    0,    0,  419,  434,    0,  435,
        0,  430,    0,  422,  436,  437,  438,  421,  424,  426,
      421,  423,  423,  425,  423,  430,  425,  439,  423,  431,
      432,  433,  423,  423,  423,  440,  434,  423,  435,  423,

      430,  423,  441,  436,  437,  438,  423,  442,  443,  444,
      423,  423,  445,  423,  446,  447,  439,  423,  448,  449,
      452,  423,  423,  423,  440,  453,  423,  450,  423,  450,
      423,  441,  450,  454,  446,  423,  442,  443,  444,  455,
      456,  445,  457,  446,  447,  458,  459,  448,  449,  452,
      460,  461,  462,  457,  453,  464,  450,  466,  450,  467,
      468,  450,  454,  446,  469,  473,  475,  476,  455,  456,
      470,  457,  477,  469,  458,  459,  480,  482,  470,  460,
      461,  462,  457,  483,  464,  469,  466,    0,  467,  468,
        0,  484,    0,  469,  473,  475,  476,    0,  485,  470,

        0,  477,  469,  486,    0,  480,  482,  470,  487,  488,
      489,    0,  483,  490,  469,  481,  481,  481,  494,  481,
      484,  481,  495,  498,  499,  500,  481,  485,  481,  481,
      481,  497,  486,  481,  497,  502,  503,  487,  488,  489,
      481,  503,  490,  505,  481,  481,  481,  494,  481,  506,
      481,  495,  498,  499,  500,  481,  504,  481,  481,  481,
      497,  507,  481,  497,  502,  503,  508,  504,  509,  481,
      503,  510,  505,  511,  512,  513,  514,  515,  506,  516,
      517,  518,  519,  520,  522,  504,  525,  523,  524,  524,
      507,  526,  527,  528,  529,  508,  504,  509,  530,  531,

      510,  523,  511,  512,  513,  514,  515,  532,  516,  517,
      518,  519,  520,  522,  533,  525,  523,  524,  524,  535,
      526,  527,  528,  529,  534,  534,  536,  530,  531,  537,
      523,  538,  539,  540,  541,  542,  532,  543,  544,  545,
      546,  547,  548,  533,  549,  549,    0,  553,  535,    0,
      550,  556,  557,  534,  534,  536,  558,  551,  537,  559,
      538,  539,  540,  541,  542,  550,  543,  544,  545,  546,
      547,  548,  551,  549,  549,  552,  553,  560,  554,  550,
      556,  557,  563,  565,  566,  558,  551,    0,  559,  567,
      552,  569,  552,  554,  550,    0,    0,  563,    0,  579,

        0,  551,    0,    0,  552,    0,  560,  554,    0,    0,
      580,  563,  565,  566,  564,    0,  564,  574,  567,  552,
      569,  552,  554,  562,  562,  562,  563,  562,  579,  562,
        0,  564,  574,  583,  562,  564,  562,  562,  562,  580,
        0,  562,  570,  564,  571,  564,  574,  570,  562,  571,
      585,  587,  562,  562,  562,  588,  562,  570,  562,  571,
      564,  574,  583,  562,  564,  562,  562,  562,  575,  572,
      562,  570,  572,  571,  589,  591,  570,  562,  571,  585,
      587,  593,  594,  575,  588,  592,  570,  592,  571,  595,
      596,  598,  589,  599,  600,  602,  601,  575,  572,  589,

      601,  572,  604,  605,  591,  607,  609,  610,  611,  612,
      593,  594,  575,  613,  592,  615,  592,  606,  595,  596,
      598,  589,  599,  600,  602,  601,  616,  618,  589,  601,
      619,  604,  605,  606,  607,  609,  610,  611,  612,  620,
      606,  617,  613,  617,  615,  621,  622,  623,  624,  625,
      626,  627,  628,  630,  633,  616,  618,  617,  631,  619,
      631,  634,  606,  637,  638,  639,  640,  641,  620,  606,
      617,  642,  617,  644,  621,  622,  623,  624,  625,  626,
      627,  628,  630,  633,  645,  650,  617,  631,  655,  631,
      634,  656,  637,  638,  639,  640,  641,  657,  658,  660,

      642,  667,  644,  668,  669,  670,  678,    0,  676,    0,
      676,  681,    0,  645,  650,  677,  679,  655,  684,  685,
      656,  686,    0,  680,  677,    0,  657,  658,  660,  676,
      667,  679,  668,  669,  670,  678,  677,  676,  680,  676,
      681,  682,  683,  690,  677,  679,  687,  684,  685,  691,
      686,  688,  680,  677,  689,  688,  682,  683,  676,  687,
      679,  694,  689,    0,  695,  677,  696,  680,  699,    0,
      682,  683,  690,    0,  697,  687,    0,  704,  691,  704,
      688,  698,  706,  689,  688,  682,  683,  707,  687,  697,
      694,  689,  693,  695,  693,  696,  698,  699,  693,  702,

      708,  702,  693,  697,    0,  703,  704,  703,  704,  693,
      698,  706,  709,  693,  693,  710,  707,  712,  697,  713,
      702,  693,  714,  693,  715,  698,  703,  693,  702,  708,
      702,  693,  716,  709,  703,  711,  703,  711,  693,  711,
      717,  709,  693,  693,  710,  718,  712,  718,  713,  702,
      719,  714,  719,  715,  720,  703,  705,    0,  705,  722,
      720,  716,  709,  723,  711,  724,  711,  725,  711,  717,
      726,  705,  727,  705,  718,  705,  718,  705,  721,  719,
      728,  719,  721,  720,  729,  705,  721,  705,  722,  720,
      733,  730,  723,  734,  724,  721,  725,  729,    0,  726,

      705,  727,  705,  729,  705,  737,  705,  721,  731,  728,
      730,  721,  735,  729,  738,  721,  739,  735,  740,  733,
      730,  731,  734,  742,  721,  746,  729,  731,    0,  747,
        0,  751,  729,  752,  737,  755,  756,  731,  751,  730,
      750,  735,  750,  738,  742,  739,  735,  740,  762,    0,
      731,  766,  742,  759,  746,    0,  731,  732,  747,  732,
      751,  750,  752,  759,  755,  756,  771,  751,  772,  750,
      772,  750,  732,  742,  732,  777,  732,  762,  732,    0,
      766,    0,  759,    0,  770,    0,  732,  770,  732,  772,
      750,  773,  759,    0,    0,  771,  774,  772,    0,  772,

      778,  732,  781,  732,  777,  732,  773,  732,  757,  757,
      757,  774,  757,  770,  757,  782,  770,  775,  772,  757,
      773,  783,  757,  757,  784,  774,  757,  775,  786,  778,
      789,  781,  790,  757,  787,  773,  785,  757,  757,  757,
      774,  757,  787,  757,  782,  793,  775,  794,  757,  795,
      783,  757,  757,  784,  785,  757,  775,  786,  796,  789,
      797,  790,  757,  787,  795,  785,  798,  799,  802,  800,
      801,  787,  803,  808,  793,  809,  794,  816,  795,  817,
      812,  818,  802,  785,  800,  801,  812,  796,  821,  797,
      809,  822,    0,  795,    0,  798,  799,  802,  800,  801,

      834,  803,  808,    0,  809,    0,  816,    0,  817,  812,
      818,  802,  852,  800,  801,  812,  825,  821,  835,  809,
      822,  823,  823,  823,  859,  823,  825,  823,  845,  834,
      861,  863,  823,  835,  846,  823,  823,    0,    0,  823,
      864,  852,  860,  845,  860,  825,  823,  835,  866,  846,
      823,  823,  823,  859,  823,  825,  823,  845,  867,  861,
      863,  823,  835,  846,  823,  823,  860,  857,  823,  864,
      857,  869,  845,  872,  873,  823,  875,  866,  846,  857,
      881,  882,  876,  884,  885,  886,  857,  867,  887,  888,
      889,  890,  893,  894,  896,  860,  857,  876,  897,  857,

      869,  900,  872,  873,  906,  875,  911,  912,  857,  881,
      882,  876,  884,  885,  886,  857,  913,  887,  888,  889,
      890,  893,  894,  896,  907,  914,  876,  897,  915,  916,
      900,  907,  917,  906,  918,  911,  912,  920,  921,  922,
      923,  927,  929,  934,  916,  913,  936,  941,  946,  918,
      947,  949,  950,  907,  914,  951,  953,  915,  916,  952,
      907,  917,  950,  918,  934,  947,  920,  921,  922,  923,
      927,  929,  934,  916,  952,  936,  941,  946,  918,  947,
      949,  954,  950,  955,  951,  953,  957,  956,  952,  960,
      961,  950,  956,  934,  947,  967,  954,  979,  965,  956,

      956,  980,  984,  952,  985,  987,  992,  993,  994,  993,
      954,  950,  955,  965,  995,  957,  956,  998,  960,  961,
     1006,  956,    0,  984,  967,  954,  979,  965,  956,  956,
      980,  984,  997,  985,  987,  992,  993,  994,  993,  996,
      999,  996,  965,  995,    0, 1007,  998,  997,    0, 1006,
     1008,  997,  984, 1011,  996,  999, 1000,    0, 1000,  999,
      996,  997, 1001,    0, 1001, 1002,    0, 1002,  996,  999,
      996, 1003,    0, 1003, 1007,    0,  997, 1000,    0, 1008,
      997, 1013, 1011,  996,  999, 1000, 1002, 1000,  999,  996,
     1015, 1001, 1003, 1001, 1002, 1004, 1002, 1004, 1010, 1005,

     1003, 1005, 1003, 1016, 1009, 1019, 1000, 1009, 1017, 1009,
     1013, 1024, 1031, 1034, 1017, 1002, 1004, 1010, 1017, 1015,
     1005, 1003, 1035, 1018, 1004, 1018, 1004, 1010, 1005, 1017,
     1005, 1036, 1016, 1009, 1019, 1030, 1009, 1017, 1009, 1040,
     1024, 1031, 1034, 1017, 1018, 1004, 1010, 1017, 1049, 1005,
     1043, 1035, 1018, 1043, 1018, 1053, 1030, 1054, 1017, 1044,
     1036, 1057, 1044, 1058, 1030, 1065, 1066, 1069, 1040, 1077,
     1078, 1079, 1067, 1018, 1068, 1081, 1080, 1049, 1082, 1043,
     1080, 1066, 1043, 1083, 1053, 1030, 1054, 1067, 1044, 1068,
     1057, 1044, 1058, 1085, 1065, 1066, 1069, 1086, 1077, 1078,

     1079, 1067, 1087, 1068, 1081, 1080, 1084, 1082, 1088, 1080,
     1066, 1090, 1083, 1084, 1092, 1096, 1067, 1098, 1068, 1099,
     1100, 1101, 1085, 1102, 1105, 1106, 1086, 1107, 1112, 1113,
     1116, 1087, 1117, 1124, 1127, 1084, 1129, 1088,    0, 1105,
     1090, 1131, 1084, 1092, 1096, 1132, 1098, 1133, 1099, 1100,
     1101, 1138, 1102, 1105, 1106, 1128, 1107, 1112, 1113, 1116,
     1130, 1117, 1124, 1127, 1139, 1129, 1141, 1128, 1105, 1141,
     1131, 1147, 1130, 1152, 1132, 1164, 1133, 1166, 1170, 1173,
     1138, 1176, 1177, 1178, 1128, 1141, 1180, 1185, 1188, 1130,
     1191, 1192, 1196, 1139, 1198, 1141, 1128, 1201, 1141, 1202,

     1147, 1130, 1152, 1205, 1164, 1208, 1166, 1170, 1173, 1211,
     1176, 1177, 1178, 1212, 1141, 1180, 1185, 1188, 1214, 1191,
     1192, 1196, 1216, 1198, 1217, 1218, 1201, 1221, 1202, 1222,
     1223, 1226, 1205, 1214, 1208, 1227, 1228, 1228, 1211, 1230,
        0, 1232, 1212, 1238, 1240, 1242, 1247, 1214, 1222, 1223,
     1248, 1216, 1226, 1217, 1218, 1229, 1221, 1229, 1222, 1223,
     1226, 1261, 1214, 1264, 1227, 1228, 1228, 1231, 1230, 1231,
     1232, 1265, 1238, 1240, 1242, 1247, 1229, 1222, 1223, 1248,
     1269, 1226, 1231, 1262, 1229, 1262, 1229, 1271, 1231, 1274,
     1261, 1275, 1264, 1285, 1284, 1289, 1231, 1285, 1231, 1291,

     1265, 1292, 1305, 1306, 1262, 1229, 1290, 1307, 1309, 1269,
     1289, 1231, 1262, 1310, 1262, 1284, 1271, 1231, 1274, 1308,
     1275, 1290, 1285, 1284, 1289, 1312, 1285, 1313, 1291, 1314,
     1292, 1305, 1306, 1262, 1308, 1290, 1307, 1309, 1315, 1289,
     1317, 1318, 1310, 1335, 1284, 1324, 1327, 1334, 1308, 1336,
     1290, 1337, 1338,    0, 1312, 1340, 1313,    0, 1314, 1336,
     1324, 1327, 1334, 1308, 1341, 1340, 1337, 1315, 1339, 1317,
     1318, 1343, 1335, 1339, 1324, 1327, 1334, 1342, 1336, 1341,
     1337, 1338, 1342, 1343, 1340, 1345, 1344, 1346, 1336, 1324,
     1327, 1334, 1347, 1341, 1340, 1337, 1349, 1339, 1344, 1363,

     1343, 1364, 1339, 1373, 1367, 1374, 1342, 1378, 1341, 1379,
     1381, 1342, 1343, 1382, 1345, 1344, 1346, 1367, 1373, 1383,
     1384, 1347, 1388, 1393, 1398, 1349, 1400, 1344, 1363, 1402,
     1364, 1404, 1373, 1367, 1374, 1406, 1378, 1405, 1379, 1381,
     1408, 1407, 1382, 1411, 1425,    0, 1367, 1373, 1383, 1384,
     1405, 1388, 1393, 1398, 1407, 1400, 1405, 1432, 1402, 1416,
     1404, 1416, 1429, 1417, 1406, 1417, 1405, 1430, 1435, 1408,
     1407, 1441, 1411, 1425, 1416, 1458, 1459, 1429, 1417, 1405,
     1416, 1460, 1430, 1407, 1417, 1405, 1432, 1461, 1416, 1462,
     1416, 1429, 1417, 1463, 1417, 1464, 1430, 1435, 1468, 1482,

     1441, 1483, 1493, 1416, 1458, 1459, 1429, 1417, 1480, 1416,
     1460, 1430, 1480, 1417, 1492, 1481, 1461, 1494, 1462, 1481,
     1492, 1495, 1463, 1496, 1464, 1497, 1498, 1468, 1482, 1499,
     1483, 1493, 1500, 1516, 1521, 1523, 1527, 1480, 1531, 1535,
        0, 1480,    0, 1492, 1481,    0, 1494,    0, 1481, 1492,
     1495,    0, 1496,    0, 1497, 1498,    0,    0, 1499,    0,
        0, 1500, 1516, 1521, 1523, 1527,    0, 1531, 1535, 1544,
     1544, 1544, 1545, 1545, 1545, 1546, 1546, 1546, 1547, 1547,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,

     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
#line 2 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
#include "scanners.h"

extern "C" int asm_yywrap(void* scanner);

#line 1961 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"

#line 1963 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"

#define INITIAL 0
#define PARAMS 1
#define CMNT 2
#define STR 3
#define STR2 4

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#define YY_EXTRA_TYPE struct param_info*

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    }; /* end struct yyguts_t */

static int yy_init_globals ( yyscan_t yyscanner );

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
int yylex_init (yyscan_t* scanner);

int yylex_init_extra ( YY_EXTRA_TYPE user_defined, yyscan_t* scanner);

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( yyscan_t yyscanner );

int yyget_debug ( yyscan_t yyscanner );

void yyset_debug ( int debug_flag , yyscan_t yyscanner );

YY_EXTRA_TYPE yyget_extra ( yyscan_t yyscanner );

void yyset_extra ( YY_EXTRA_TYPE user_defined , yyscan_t yyscanner );

FILE *yyget_in ( yyscan_t yyscanner );

void yyset_in  ( FILE * _in_str , yyscan_t yyscanner );

FILE *yyget_out ( yyscan_t yyscanner );

void yyset_out  ( FILE * _out_str , yyscan_t yyscanner );

			int yyget_leng ( yyscan_t yyscanner );

char *yyget_text ( yyscan_t yyscanner );

int yyget_lineno ( yyscan_t yyscanner );

void yyset_lineno ( int _line_number , yyscan_t yyscanner );

int yyget_column  ( yyscan_t yyscanner );

void yyset_column ( int _column_no , yyscan_t yyscanner );

YYSTYPE * yyget_lval ( yyscan_t yyscanner );

void yyset_lval ( YYSTYPE * yylval_param , yyscan_t yyscanner );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( yyscan_t yyscanner );
#else
extern int yywrap ( yyscan_t yyscanner );
#endif
#endif

#ifndef YY_NO_UNPUT
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int , yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * , yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( yyscan_t yyscanner );
#else
static int input ( yyscan_t yyscanner );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		int n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex \
               (YYSTYPE * yylval_param , yyscan_t yyscanner);

#define YY_DECL int yylex \
               (YYSTYPE * yylval_param , yyscan_t yyscanner)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yylval = yylval_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
		}

		yy_load_buffer_state( yyscanner );
		}

	{
#line 25 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"


#line 2240 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yyg->yy_start;
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1544 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1543 );
		yy_cp = yyg->yy_last_accepting_cpos;
		yy_current_state = yyg->yy_last_accepting_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 29 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 30 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 31 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 32 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 33 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 34 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 35 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 36 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 37 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 38 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 39 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 40 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 41 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 42 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 43 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 44 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 45 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 46 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 47 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 48 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 49 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 50 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 51 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 52 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 53 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 54 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 55 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 56 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 57 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 58 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 59 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 60 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 61 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 62 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 63 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 64 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 65 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 66 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 67 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 68 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 69 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 70 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 71 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 72 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 73 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 74 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 75 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 76 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 77 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 78 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 79 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 80 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 81 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 82 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 83 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 84 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 85 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 86 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 87 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 88 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 89 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 90 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 91 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 92 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 93 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 94 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 95 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 96 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 97 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 98 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 99 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 100 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 101 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 102 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 103 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 104 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 105 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 106 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 107 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 108 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 109 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 110 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 111 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 112 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 113 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 114 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 115 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 116 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 117 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 118 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 119 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 120 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 121 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 122 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 123 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 124 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 125 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 126 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 127 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 128 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 129 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 130 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 131 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 132 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 133 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 134 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 135 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 136 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 137 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 138 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 139 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 140 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 141 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 142 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 143 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 144 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 145 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 146 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 147 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 148 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 149 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 150 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 151 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 152 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 153 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 154 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 155 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 156 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 157 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 158 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 159 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 160 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 161 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 162 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 163 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 164 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 165 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 166 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 167 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 168 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 169 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 170 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 171 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 172 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 173 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 174 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 175 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 176 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 177 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 178 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 179 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 180 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 181 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 182 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 183 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 184 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 185 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 186 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 187 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 188 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 189 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 162:
YY_RULE_SETUP
#line 190 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 163:
YY_RULE_SETUP
#line 191 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 192 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 193 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 166:
YY_RULE_SETUP
#line 194 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 167:
YY_RULE_SETUP
#line 195 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 168:
YY_RULE_SETUP
#line 196 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 197 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 170:
YY_RULE_SETUP
#line 198 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 171:
YY_RULE_SETUP
#line 199 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 172:
YY_RULE_SETUP
#line 200 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 173:
YY_RULE_SETUP
#line 201 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 202 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 175:
YY_RULE_SETUP
#line 203 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 204 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 177:
YY_RULE_SETUP
#line 205 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 206 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 179:
YY_RULE_SETUP
#line 207 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 208 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 209 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 182:
YY_RULE_SETUP
#line 210 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 183:
YY_RULE_SETUP
#line 211 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 184:
YY_RULE_SETUP
#line 212 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 185:
YY_RULE_SETUP
#line 213 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 214 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 215 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 216 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 217 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 218 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 219 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 192:
YY_RULE_SETUP
#line 220 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 221 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 194:
YY_RULE_SETUP
#line 222 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 195:
YY_RULE_SETUP
#line 223 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 224 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 197:
YY_RULE_SETUP
#line 225 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 226 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 199:
YY_RULE_SETUP
#line 227 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 200:
YY_RULE_SETUP
#line 228 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 201:
YY_RULE_SETUP
#line 229 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 230 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 231 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 204:
YY_RULE_SETUP
#line 232 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 233 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 234 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 235 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 236 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 237 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 238 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 239 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 240 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 213:
YY_RULE_SETUP
#line 241 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 242 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 243 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 216:
YY_RULE_SETUP
#line 244 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 245 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 246 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 219:
YY_RULE_SETUP
#line 247 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 248 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 249 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 250 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_1;}
	YY_BREAK
case 223:
YY_RULE_SETUP
#line 251 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 224:
YY_RULE_SETUP
#line 252 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 253 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 254 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 255 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 228:
YY_RULE_SETUP
#line 256 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 229:
YY_RULE_SETUP
#line 257 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 230:
YY_RULE_SETUP
#line 258 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 231:
YY_RULE_SETUP
#line 259 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 232:
YY_RULE_SETUP
#line 260 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 233:
YY_RULE_SETUP
#line 261 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 234:
YY_RULE_SETUP
#line 262 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 235:
YY_RULE_SETUP
#line 263 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 236:
YY_RULE_SETUP
#line 264 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 237:
YY_RULE_SETUP
#line 265 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 238:
YY_RULE_SETUP
#line 266 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 239:
YY_RULE_SETUP
#line 267 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 268 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 241:
YY_RULE_SETUP
#line 269 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 242:
YY_RULE_SETUP
#line 270 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 243:
YY_RULE_SETUP
#line 271 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 244:
YY_RULE_SETUP
#line 272 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 245:
YY_RULE_SETUP
#line 273 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 246:
YY_RULE_SETUP
#line 274 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 247:
YY_RULE_SETUP
#line 275 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 248:
YY_RULE_SETUP
#line 276 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 249:
YY_RULE_SETUP
#line 277 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 250:
YY_RULE_SETUP
#line 278 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 279 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 252:
YY_RULE_SETUP
#line 280 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 253:
YY_RULE_SETUP
#line 281 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 254:
YY_RULE_SETUP
#line 282 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 255:
YY_RULE_SETUP
#line 283 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 256:
YY_RULE_SETUP
#line 284 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 257:
YY_RULE_SETUP
#line 285 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 258:
YY_RULE_SETUP
#line 286 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 259:
YY_RULE_SETUP
#line 287 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 260:
YY_RULE_SETUP
#line 288 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 261:
YY_RULE_SETUP
#line 289 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 262:
YY_RULE_SETUP
#line 290 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 263:
YY_RULE_SETUP
#line 291 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 264:
YY_RULE_SETUP
#line 292 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 265:
YY_RULE_SETUP
#line 293 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 266:
YY_RULE_SETUP
#line 294 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 267:
YY_RULE_SETUP
#line 295 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 268:
YY_RULE_SETUP
#line 296 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 269:
YY_RULE_SETUP
#line 297 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 270:
YY_RULE_SETUP
#line 298 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 271:
YY_RULE_SETUP
#line 299 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 272:
YY_RULE_SETUP
#line 300 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 273:
YY_RULE_SETUP
#line 301 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 274:
YY_RULE_SETUP
#line 302 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 275:
YY_RULE_SETUP
#line 303 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 276:
YY_RULE_SETUP
#line 304 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 277:
YY_RULE_SETUP
#line 305 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 278:
YY_RULE_SETUP
#line 306 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 279:
YY_RULE_SETUP
#line 307 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 280:
YY_RULE_SETUP
#line 308 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 281:
YY_RULE_SETUP
#line 309 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 282:
YY_RULE_SETUP
#line 310 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 283:
YY_RULE_SETUP
#line 311 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 284:
YY_RULE_SETUP
#line 312 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 285:
YY_RULE_SETUP
#line 313 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 286:
YY_RULE_SETUP
#line 314 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 287:
YY_RULE_SETUP
#line 315 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 288:
YY_RULE_SETUP
#line 316 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 289:
YY_RULE_SETUP
#line 317 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 290:
YY_RULE_SETUP
#line 318 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 291:
YY_RULE_SETUP
#line 319 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 292:
YY_RULE_SETUP
#line 320 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 293:
YY_RULE_SETUP
#line 321 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 294:
YY_RULE_SETUP
#line 322 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 295:
YY_RULE_SETUP
#line 323 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 296:
YY_RULE_SETUP
#line 324 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 297:
YY_RULE_SETUP
#line 325 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 298:
YY_RULE_SETUP
#line 326 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 299:
YY_RULE_SETUP
#line 327 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 300:
YY_RULE_SETUP
#line 328 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 301:
YY_RULE_SETUP
#line 329 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 302:
YY_RULE_SETUP
#line 330 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 303:
YY_RULE_SETUP
#line 331 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 304:
YY_RULE_SETUP
#line 332 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 305:
YY_RULE_SETUP
#line 333 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 306:
YY_RULE_SETUP
#line 334 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 307:
YY_RULE_SETUP
#line 335 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_1;}
	YY_BREAK
case 308:
YY_RULE_SETUP
#line 336 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 309:
YY_RULE_SETUP
#line 337 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 310:
YY_RULE_SETUP
#line 338 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 339 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 312:
YY_RULE_SETUP
#line 340 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 313:
YY_RULE_SETUP
#line 341 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 314:
YY_RULE_SETUP
#line 342 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 315:
YY_RULE_SETUP
#line 343 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 316:
YY_RULE_SETUP
#line 344 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 317:
YY_RULE_SETUP
#line 345 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 318:
YY_RULE_SETUP
#line 346 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 319:
YY_RULE_SETUP
#line 347 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 320:
YY_RULE_SETUP
#line 348 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 321:
YY_RULE_SETUP
#line 349 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 322:
YY_RULE_SETUP
#line 350 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 323:
YY_RULE_SETUP
#line 351 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 352 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 325:
YY_RULE_SETUP
#line 353 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 326:
YY_RULE_SETUP
#line 354 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 327:
YY_RULE_SETUP
#line 355 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 328:
YY_RULE_SETUP
#line 356 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 329:
YY_RULE_SETUP
#line 357 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 330:
YY_RULE_SETUP
#line 358 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 331:
YY_RULE_SETUP
#line 359 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 332:
YY_RULE_SETUP
#line 360 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 333:
YY_RULE_SETUP
#line 361 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 362 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 335:
YY_RULE_SETUP
#line 363 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 336:
YY_RULE_SETUP
#line 364 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 337:
YY_RULE_SETUP
#line 365 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 338:
YY_RULE_SETUP
#line 366 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 339:
YY_RULE_SETUP
#line 367 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 340:
YY_RULE_SETUP
#line 368 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 341:
YY_RULE_SETUP
#line 369 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 342:
YY_RULE_SETUP
#line 370 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 343:
YY_RULE_SETUP
#line 371 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 344:
YY_RULE_SETUP
#line 372 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 345:
YY_RULE_SETUP
#line 373 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 346:
YY_RULE_SETUP
#line 374 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 347:
YY_RULE_SETUP
#line 375 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 348:
YY_RULE_SETUP
#line 376 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 349:
YY_RULE_SETUP
#line 377 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 350:
YY_RULE_SETUP
#line 378 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 351:
YY_RULE_SETUP
#line 379 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 352:
YY_RULE_SETUP
#line 380 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 353:
YY_RULE_SETUP
#line 381 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 354:
YY_RULE_SETUP
#line 382 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 355:
YY_RULE_SETUP
#line 383 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 356:
YY_RULE_SETUP
#line 384 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 357:
YY_RULE_SETUP
#line 385 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 358:
YY_RULE_SETUP
#line 386 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 359:
YY_RULE_SETUP
#line 387 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 360:
YY_RULE_SETUP
#line 388 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 361:
YY_RULE_SETUP
#line 389 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 390 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 363:
YY_RULE_SETUP
#line 391 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 364:
YY_RULE_SETUP
#line 392 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 365:
YY_RULE_SETUP
#line 393 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 366:
YY_RULE_SETUP
#line 394 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 367:
YY_RULE_SETUP
#line 395 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 368:
YY_RULE_SETUP
#line 396 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 369:
YY_RULE_SETUP
#line 397 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 370:
YY_RULE_SETUP
#line 398 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 399 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 372:
YY_RULE_SETUP
#line 400 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 373:
YY_RULE_SETUP
#line 401 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 374:
YY_RULE_SETUP
#line 402 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 375:
YY_RULE_SETUP
#line 403 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 376:
YY_RULE_SETUP
#line 404 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 377:
YY_RULE_SETUP
#line 405 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 378:
YY_RULE_SETUP
#line 406 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 407 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 408 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 409 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 410 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 383:
YY_RULE_SETUP
#line 411 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 412 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 385:
YY_RULE_SETUP
#line 413 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 386:
YY_RULE_SETUP
#line 414 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 415 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 388:
YY_RULE_SETUP
#line 416 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 389:
YY_RULE_SETUP
#line 417 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 418 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 419 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 420 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 393:
YY_RULE_SETUP
#line 421 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 394:
YY_RULE_SETUP
#line 422 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 395:
YY_RULE_SETUP
#line 423 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 396:
YY_RULE_SETUP
#line 424 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 397:
YY_RULE_SETUP
#line 425 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 398:
YY_RULE_SETUP
#line 426 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 427 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 400:
YY_RULE_SETUP
#line 428 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 429 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 402:
YY_RULE_SETUP
#line 430 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 403:
YY_RULE_SETUP
#line 431 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 404:
YY_RULE_SETUP
#line 432 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 405:
YY_RULE_SETUP
#line 433 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 406:
YY_RULE_SETUP
#line 434 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 407:
YY_RULE_SETUP
#line 435 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 408:
YY_RULE_SETUP
#line 436 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 409:
YY_RULE_SETUP
#line 437 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 410:
YY_RULE_SETUP
#line 438 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 411:
YY_RULE_SETUP
#line 439 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 412:
YY_RULE_SETUP
#line 440 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 413:
YY_RULE_SETUP
#line 441 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 414:
YY_RULE_SETUP
#line 442 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 415:
YY_RULE_SETUP
#line 443 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 416:
YY_RULE_SETUP
#line 444 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 445 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 418:
YY_RULE_SETUP
#line 446 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 419:
YY_RULE_SETUP
#line 447 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 420:
YY_RULE_SETUP
#line 448 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 421:
YY_RULE_SETUP
#line 449 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 422:
YY_RULE_SETUP
#line 450 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 423:
YY_RULE_SETUP
#line 451 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 424:
YY_RULE_SETUP
#line 452 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 425:
YY_RULE_SETUP
#line 453 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 426:
YY_RULE_SETUP
#line 454 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 427:
YY_RULE_SETUP
#line 455 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 456 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 429:
YY_RULE_SETUP
#line 457 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 430:
YY_RULE_SETUP
#line 458 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 431:
YY_RULE_SETUP
#line 459 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 432:
YY_RULE_SETUP
#line 460 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 433:
YY_RULE_SETUP
#line 461 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 434:
YY_RULE_SETUP
#line 462 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 435:
YY_RULE_SETUP
#line 463 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 436:
YY_RULE_SETUP
#line 464 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 437:
YY_RULE_SETUP
#line 465 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 438:
YY_RULE_SETUP
#line 466 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 439:
YY_RULE_SETUP
#line 467 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 440:
YY_RULE_SETUP
#line 468 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 441:
YY_RULE_SETUP
#line 469 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 442:
YY_RULE_SETUP
#line 470 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 471 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 444:
YY_RULE_SETUP
#line 472 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 445:
YY_RULE_SETUP
#line 473 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 446:
YY_RULE_SETUP
#line 474 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 447:
YY_RULE_SETUP
#line 475 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 448:
YY_RULE_SETUP
#line 476 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 449:
YY_RULE_SETUP
#line 477 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 450:
YY_RULE_SETUP
#line 478 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 451:
YY_RULE_SETUP
#line 479 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 452:
YY_RULE_SETUP
#line 480 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 453:
YY_RULE_SETUP
#line 481 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 454:
YY_RULE_SETUP
#line 482 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 455:
YY_RULE_SETUP
#line 483 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 456:
YY_RULE_SETUP
#line 484 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 457:
YY_RULE_SETUP
#line 485 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 458:
YY_RULE_SETUP
#line 486 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 459:
YY_RULE_SETUP
#line 487 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 460:
YY_RULE_SETUP
#line 488 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 461:
YY_RULE_SETUP
#line 489 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 462:
YY_RULE_SETUP
#line 490 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 463:
YY_RULE_SETUP
#line 491 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 464:
YY_RULE_SETUP
#line 492 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 465:
YY_RULE_SETUP
#line 493 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 466:
YY_RULE_SETUP
#line 494 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 467:
YY_RULE_SETUP
#line 495 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 468:
YY_RULE_SETUP
#line 496 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 469:
YY_RULE_SETUP
#line 497 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 470:
YY_RULE_SETUP
#line 498 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 471:
YY_RULE_SETUP
#line 499 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 472:
YY_RULE_SETUP
#line 500 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 473:
YY_RULE_SETUP
#line 501 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 474:
YY_RULE_SETUP
#line 502 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 475:
YY_RULE_SETUP
#line 503 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 476:
YY_RULE_SETUP
#line 504 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 477:
YY_RULE_SETUP
#line 505 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 478:
YY_RULE_SETUP
#line 506 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 479:
YY_RULE_SETUP
#line 507 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 480:
YY_RULE_SETUP
#line 508 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 481:
YY_RULE_SETUP
#line 509 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 482:
YY_RULE_SETUP
#line 510 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 483:
YY_RULE_SETUP
#line 511 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 484:
YY_RULE_SETUP
#line 512 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 485:
YY_RULE_SETUP
#line 513 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 486:
YY_RULE_SETUP
#line 514 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 487:
YY_RULE_SETUP
#line 515 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 488:
YY_RULE_SETUP
#line 516 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 489:
YY_RULE_SETUP
#line 517 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 490:
YY_RULE_SETUP
#line 518 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 491:
YY_RULE_SETUP
#line 519 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 492:
YY_RULE_SETUP
#line 520 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 493:
YY_RULE_SETUP
#line 521 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 494:
YY_RULE_SETUP
#line 522 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 495:
YY_RULE_SETUP
#line 523 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 496:
YY_RULE_SETUP
#line 524 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 497:
YY_RULE_SETUP
#line 525 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 498:
YY_RULE_SETUP
#line 526 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 499:
YY_RULE_SETUP
#line 527 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 500:
YY_RULE_SETUP
#line 528 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 501:
YY_RULE_SETUP
#line 529 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 502:
YY_RULE_SETUP
#line 530 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 503:
YY_RULE_SETUP
#line 531 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 504:
YY_RULE_SETUP
#line 532 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 505:
YY_RULE_SETUP
#line 533 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 506:
YY_RULE_SETUP
#line 534 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 507:
YY_RULE_SETUP
#line 535 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 508:
YY_RULE_SETUP
#line 536 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 509:
YY_RULE_SETUP
#line 537 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 510:
YY_RULE_SETUP
#line 538 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 511:
YY_RULE_SETUP
#line 539 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 512:
YY_RULE_SETUP
#line 540 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 513:
YY_RULE_SETUP
#line 541 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 514:
YY_RULE_SETUP
#line 542 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 515:
YY_RULE_SETUP
#line 543 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 516:
YY_RULE_SETUP
#line 544 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 517:
YY_RULE_SETUP
#line 545 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 518:
YY_RULE_SETUP
#line 546 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 519:
YY_RULE_SETUP
#line 547 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 520:
YY_RULE_SETUP
#line 548 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 521:
YY_RULE_SETUP
#line 549 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 522:
YY_RULE_SETUP
#line 550 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 523:
YY_RULE_SETUP
#line 551 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 524:
YY_RULE_SETUP
#line 552 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 525:
YY_RULE_SETUP
#line 553 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 526:
YY_RULE_SETUP
#line 554 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 527:
YY_RULE_SETUP
#line 555 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 528:
YY_RULE_SETUP
#line 556 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 529:
YY_RULE_SETUP
#line 557 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 530:
YY_RULE_SETUP
#line 558 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 531:
YY_RULE_SETUP
#line 559 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 532:
YY_RULE_SETUP
#line 560 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 533:
YY_RULE_SETUP
#line 561 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 534:
YY_RULE_SETUP
#line 562 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 535:
YY_RULE_SETUP
#line 563 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 536:
YY_RULE_SETUP
#line 564 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 537:
YY_RULE_SETUP
#line 565 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 538:
YY_RULE_SETUP
#line 566 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 539:
YY_RULE_SETUP
#line 567 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 540:
YY_RULE_SETUP
#line 568 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 541:
YY_RULE_SETUP
#line 569 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 542:
YY_RULE_SETUP
#line 570 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 543:
YY_RULE_SETUP
#line 571 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 544:
YY_RULE_SETUP
#line 572 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 545:
YY_RULE_SETUP
#line 573 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 546:
YY_RULE_SETUP
#line 574 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 547:
YY_RULE_SETUP
#line 575 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 548:
YY_RULE_SETUP
#line 576 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 549:
YY_RULE_SETUP
#line 577 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 550:
YY_RULE_SETUP
#line 578 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 551:
YY_RULE_SETUP
#line 579 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 552:
YY_RULE_SETUP
#line 580 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 553:
YY_RULE_SETUP
#line 581 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 554:
YY_RULE_SETUP
#line 582 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 555:
YY_RULE_SETUP
#line 583 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 556:
YY_RULE_SETUP
#line 584 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 557:
YY_RULE_SETUP
#line 585 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 558:
YY_RULE_SETUP
#line 586 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 559:
YY_RULE_SETUP
#line 587 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 560:
YY_RULE_SETUP
#line 588 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 561:
YY_RULE_SETUP
#line 589 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 562:
YY_RULE_SETUP
#line 590 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 563:
YY_RULE_SETUP
#line 591 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 564:
YY_RULE_SETUP
#line 592 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 565:
YY_RULE_SETUP
#line 593 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 566:
YY_RULE_SETUP
#line 594 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 567:
YY_RULE_SETUP
#line 595 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 568:
YY_RULE_SETUP
#line 596 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 569:
YY_RULE_SETUP
#line 597 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 570:
YY_RULE_SETUP
#line 598 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 571:
YY_RULE_SETUP
#line 599 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 572:
YY_RULE_SETUP
#line 600 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 573:
YY_RULE_SETUP
#line 601 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 574:
YY_RULE_SETUP
#line 602 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 575:
YY_RULE_SETUP
#line 603 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 576:
YY_RULE_SETUP
#line 604 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 577:
YY_RULE_SETUP
#line 605 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 578:
YY_RULE_SETUP
#line 606 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 579:
YY_RULE_SETUP
#line 607 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 580:
YY_RULE_SETUP
#line 608 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 581:
YY_RULE_SETUP
#line 609 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 582:
YY_RULE_SETUP
#line 610 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 583:
YY_RULE_SETUP
#line 611 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 584:
YY_RULE_SETUP
#line 612 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 585:
YY_RULE_SETUP
#line 613 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 586:
YY_RULE_SETUP
#line 614 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 587:
YY_RULE_SETUP
#line 615 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 588:
YY_RULE_SETUP
#line 616 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 589:
YY_RULE_SETUP
#line 617 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 590:
YY_RULE_SETUP
#line 618 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 591:
YY_RULE_SETUP
#line 619 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 592:
YY_RULE_SETUP
#line 620 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 593:
YY_RULE_SETUP
#line 621 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 594:
YY_RULE_SETUP
#line 622 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 595:
YY_RULE_SETUP
#line 623 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 596:
YY_RULE_SETUP
#line 624 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 597:
YY_RULE_SETUP
#line 625 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 598:
YY_RULE_SETUP
#line 626 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 599:
YY_RULE_SETUP
#line 627 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 600:
YY_RULE_SETUP
#line 628 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 601:
YY_RULE_SETUP
#line 629 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 602:
YY_RULE_SETUP
#line 630 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 603:
YY_RULE_SETUP
#line 631 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 604:
YY_RULE_SETUP
#line 632 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 605:
YY_RULE_SETUP
#line 633 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 606:
YY_RULE_SETUP
#line 634 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 607:
YY_RULE_SETUP
#line 635 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 608:
YY_RULE_SETUP
#line 636 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 609:
YY_RULE_SETUP
#line 637 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 610:
YY_RULE_SETUP
#line 638 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 611:
YY_RULE_SETUP
#line 639 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 612:
YY_RULE_SETUP
#line 640 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 613:
YY_RULE_SETUP
#line 641 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 614:
YY_RULE_SETUP
#line 642 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 615:
YY_RULE_SETUP
#line 643 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 616:
YY_RULE_SETUP
#line 644 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 617:
YY_RULE_SETUP
#line 645 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 618:
YY_RULE_SETUP
#line 646 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 619:
YY_RULE_SETUP
#line 647 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 620:
YY_RULE_SETUP
#line 648 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 621:
YY_RULE_SETUP
#line 649 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 622:
YY_RULE_SETUP
#line 650 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 623:
YY_RULE_SETUP
#line 651 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 624:
YY_RULE_SETUP
#line 652 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 625:
YY_RULE_SETUP
#line 653 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 626:
YY_RULE_SETUP
#line 654 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 627:
YY_RULE_SETUP
#line 655 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 628:
YY_RULE_SETUP
#line 656 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 629:
YY_RULE_SETUP
#line 657 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 630:
YY_RULE_SETUP
#line 658 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 631:
YY_RULE_SETUP
#line 659 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 632:
YY_RULE_SETUP
#line 660 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 633:
YY_RULE_SETUP
#line 661 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 634:
YY_RULE_SETUP
#line 662 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 635:
YY_RULE_SETUP
#line 663 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 636:
YY_RULE_SETUP
#line 664 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 637:
YY_RULE_SETUP
#line 665 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 638:
YY_RULE_SETUP
#line 666 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 639:
YY_RULE_SETUP
#line 667 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 640:
YY_RULE_SETUP
#line 668 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 641:
YY_RULE_SETUP
#line 669 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 642:
YY_RULE_SETUP
#line 670 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 643:
YY_RULE_SETUP
#line 672 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 644:
YY_RULE_SETUP
#line 673 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(PARAMS); return KEYW_1;}
	YY_BREAK
case 645:
YY_RULE_SETUP
#line 675 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 646:
YY_RULE_SETUP
#line 677 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(CMNT); yylval->str=new std::string(";");}
	YY_BREAK
case 647:
YY_RULE_SETUP
#line 679 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(STR); yylval->str = new std::string("\""); yyextra->intval = INITIAL;}
	YY_BREAK
case 648:
YY_RULE_SETUP
#line 680 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(STR2); yylval->str = new std::string("\'"); yyextra->intval = INITIAL;}
	YY_BREAK
case 649:
YY_RULE_SETUP
#line 682 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return SPACE;}
	YY_BREAK
case 650:
YY_RULE_SETUP
#line 683 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OTHER;}
	YY_BREAK
case 651:
/* rule 651 can match eol */
YY_RULE_SETUP
#line 684 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return NEWLINE;}
	YY_BREAK
case 652:
YY_RULE_SETUP
#line 685 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OTHER;}
	YY_BREAK



case 653:
YY_RULE_SETUP
#line 690 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 654:
YY_RULE_SETUP
#line 691 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 655:
YY_RULE_SETUP
#line 692 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 656:
YY_RULE_SETUP
#line 693 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 657:
YY_RULE_SETUP
#line 694 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 658:
YY_RULE_SETUP
#line 695 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 659:
YY_RULE_SETUP
#line 697 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 660:
YY_RULE_SETUP
#line 698 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 661:
YY_RULE_SETUP
#line 699 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 662:
YY_RULE_SETUP
#line 700 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 663:
YY_RULE_SETUP
#line 701 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 664:
YY_RULE_SETUP
#line 702 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 665:
YY_RULE_SETUP
#line 704 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 666:
YY_RULE_SETUP
#line 705 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 667:
YY_RULE_SETUP
#line 706 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 668:
YY_RULE_SETUP
#line 707 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 669:
YY_RULE_SETUP
#line 708 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 670:
YY_RULE_SETUP
#line 709 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 671:
YY_RULE_SETUP
#line 710 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 672:
YY_RULE_SETUP
#line 711 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 673:
YY_RULE_SETUP
#line 713 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 674:
YY_RULE_SETUP
#line 714 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 675:
YY_RULE_SETUP
#line 715 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 676:
YY_RULE_SETUP
#line 716 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 677:
YY_RULE_SETUP
#line 717 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 678:
YY_RULE_SETUP
#line 718 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 679:
YY_RULE_SETUP
#line 719 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 680:
YY_RULE_SETUP
#line 720 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 681:
YY_RULE_SETUP
#line 721 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 682:
YY_RULE_SETUP
#line 723 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 683:
YY_RULE_SETUP
#line 724 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 684:
YY_RULE_SETUP
#line 725 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 685:
YY_RULE_SETUP
#line 726 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 686:
YY_RULE_SETUP
#line 727 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 687:
YY_RULE_SETUP
#line 728 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 688:
YY_RULE_SETUP
#line 729 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 689:
YY_RULE_SETUP
#line 730 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 690:
YY_RULE_SETUP
#line 732 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 691:
YY_RULE_SETUP
#line 733 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 692:
YY_RULE_SETUP
#line 734 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 693:
YY_RULE_SETUP
#line 735 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 694:
YY_RULE_SETUP
#line 736 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 695:
YY_RULE_SETUP
#line 737 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 696:
YY_RULE_SETUP
#line 738 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 697:
YY_RULE_SETUP
#line 739 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 698:
YY_RULE_SETUP
#line 740 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 699:
YY_RULE_SETUP
#line 741 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 700:
YY_RULE_SETUP
#line 742 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 701:
YY_RULE_SETUP
#line 743 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 702:
YY_RULE_SETUP
#line 744 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 703:
YY_RULE_SETUP
#line 745 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 704:
YY_RULE_SETUP
#line 746 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 705:
YY_RULE_SETUP
#line 747 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return KEYW_2;}
	YY_BREAK
case 706:
YY_RULE_SETUP
#line 749 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 707:
YY_RULE_SETUP
#line 750 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 708:
YY_RULE_SETUP
#line 751 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 709:
YY_RULE_SETUP
#line 752 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 710:
YY_RULE_SETUP
#line 753 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 711:
YY_RULE_SETUP
#line 754 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 712:
YY_RULE_SETUP
#line 755 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 713:
YY_RULE_SETUP
#line 756 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OPERATOR;}
	YY_BREAK
case 714:
YY_RULE_SETUP
#line 758 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(CMNT); yylval->str=new std::string(";");}
	YY_BREAK
case 715:
YY_RULE_SETUP
#line 760 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return NUMBER;}
	YY_BREAK
case 716:
YY_RULE_SETUP
#line 761 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return NUMBER;}
	YY_BREAK
case 717:
YY_RULE_SETUP
#line 762 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return NUMBER;}
	YY_BREAK
case 718:
YY_RULE_SETUP
#line 764 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(STR); yylval->str = new std::string("\""); yyextra->intval = PARAMS;}
	YY_BREAK
case 719:
YY_RULE_SETUP
#line 765 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{BEGIN(STR2); yylval->str = new std::string("\'"); yyextra->intval = PARAMS;}
	YY_BREAK
case 720:
YY_RULE_SETUP
#line 767 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return SPACE;}
	YY_BREAK
case 721:
YY_RULE_SETUP
#line 768 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OTHER;}
	YY_BREAK
case 722:
/* rule 722 can match eol */
YY_RULE_SETUP
#line 769 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); BEGIN(INITIAL); return NEWLINE;}
	YY_BREAK
case 723:
YY_RULE_SETUP
#line 770 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{StoreString(yylval,yytext); return OTHER;}
	YY_BREAK



case 724:
YY_RULE_SETUP
#line 775 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{*(yylval->str) += "&nbsp;";}
	YY_BREAK
case 725:
/* rule 725 can match eol */
YY_RULE_SETUP
#line 776 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{yyless(0); BEGIN(INITIAL); return COMMENT1;}
	YY_BREAK
case 726:
YY_RULE_SETUP
#line 777 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{*(yylval->str) += yytext;}
	YY_BREAK



case 727:
YY_RULE_SETUP
#line 782 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{*(yylval->str) += "\""; BEGIN(yyextra->intval); return STRING;}
	YY_BREAK
case 728:
/* rule 728 can match eol */
YY_RULE_SETUP
#line 783 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{if(yyextra->change_newline){*(yylval->str) += "<br>";} *(yylval->str) += yytext;}
	YY_BREAK
case 729:
YY_RULE_SETUP
#line 784 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{*(yylval->str) += yytext;}
	YY_BREAK



case 730:
YY_RULE_SETUP
#line 789 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{*(yylval->str) += "\'"; BEGIN(yyextra->intval); return STRING;}
	YY_BREAK
case 731:
/* rule 731 can match eol */
YY_RULE_SETUP
#line 790 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
{if(yyextra->change_newline){*(yylval->str) += "<br>";} *(yylval->str) += yytext;}
	YY_BREAK
case 732:
YY_RULE_SETUP
#line 791 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"

	YY_BREAK

case 733:
YY_RULE_SETUP
#line 794 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"
ECHO;
	YY_BREAK
#line 5976 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter/asmlexer.scanner.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(PARAMS):
case YY_STATE_EOF(CMNT):
case YY_STATE_EOF(STR):
case YY_STATE_EOF(STR2):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yyg->yy_last_accepting_cpos;
				yy_current_state = yyg->yy_last_accepting_state;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( yywrap( yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = yyg->yytext_ptr;
	int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  , yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_current_state = yyg->yy_start;

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1544 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
{
	int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
	char *yy_cp = yyg->yy_c_buf_p;

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yyg->yy_last_accepting_state = yy_current_state;
		yyg->yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1544 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1543);

	(void)yyg;
	return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr);
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin , yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap( yyscanner ) )
						return 0;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file , yyscanner);
	yy_load_buffer_state( yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state( yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

static void yy_load_buffer_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file , yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * @param yyscanner The scanner object.
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf , yyscanner );

	yyfree( (void *) b , yyscanner );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_flush_buffer( b , yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state( yyscanner );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack(yyscanner);

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state( yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
void yypop_buffer_state (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER , yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state( yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (yyscan_t yyscanner)
{
	yy_size_t num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b , yyscanner );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (const char * yystr , yyscan_t yyscanner)
{
    
	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) yyalloc( n , yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n , yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE yyget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int yyget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int yyget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int yyget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *yyget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void yyset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/** Set the current line number.
 * @param _line_number line number
 * @param yyscanner The scanner object.
 */
void yyset_lineno (int  _line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_lineno called with no buffer" );
    
    yylineno = _line_number;
}

/** Set the current column.
 * @param _column_no column number
 * @param yyscanner The scanner object.
 */
void yyset_column (int  _column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_column called with no buffer" );
    
    yycolumn = _column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  _in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = _in_str ;
}

void yyset_out (FILE *  _out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = _out_str ;
}

int yyget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void yyset_debug (int  _bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = _bdebug ;
}

/* Accessor methods for yylval and yylloc */

YYSTYPE * yyget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void yyset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

/* User-visible API */

/* yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */
int yylex_init(yyscan_t* ptr_yy_globals)
{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* yylex_init_extra has the same functionality as yylex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to yyalloc in
 * the yyextra field.
 */
int yylex_init_extra( YY_EXTRA_TYPE yy_user_defined, yyscan_t* ptr_yy_globals )
{
    struct yyguts_t dummy_yyguts;

    yyset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    yyset_extra (yy_user_defined, *ptr_yy_globals);

    return yy_init_globals ( *ptr_yy_globals );
}

static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = NULL;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = NULL;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER , yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	yyfree(yyg->yy_buffer_stack , yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        yyfree( yyg->yy_start_stack , yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

    /* Destroy the main struct (reentrant only). */
    yyfree ( yyscanner , yyscanner );
    yyscanner = NULL;
    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s , yyscan_t yyscanner)
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 794 "D:\\Bestanden\\Data\\Codes\\Programeren\\C++\\Finished\\SyntaxHighlighter\\asmlexer.l"


extern "C" int asm_yywrap(void* scanner) {return 1;}

